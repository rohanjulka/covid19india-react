{"version":3,"sources":["utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","utils/hooks.js","components/minigraph.js","components/home.js","components/navbar.js","components/links.js","components/faq.js","components/banner.js","components/patientsview.js","components/patients.js","components/downloadblock.js","components/patientdb.js","components/Charts/genderchart.js","components/Charts/agechart.js","components/Charts/nationalitychart.js","components/Charts/allstates.js","components/Charts/totalconfirmedchart.js","components/Charts/dailyconfirmedchart.js","components/deepdive.js","components/resourcetable.js","components/resources.js","App.js","serviceWorker.js","index.js"],"names":["months","stateCodes","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DD","DL","JK","LA","LD","PY","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","preprocessTimeseries","timeseries","data","today","Date","setHours","dataTypes","filter","d","every","dt","date","Number","getFullYear","validateCTS","map","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","format","parseStateTimeseries","states_daily","statewiseSeries","Object","keys","reduce","a","c","moment","i","isBefore","entries","forEach","k","v","stateCode","toLowerCase","prev","length","push","toDate","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","key","handleSort","column","setItem","Fragment","className","total","onMouseEnter","onHighlightState","index","onMouseLeave","onTouchStart","onClick","style","background","fontWeight","reveal","display","to","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","colSpan","title","parse","lastupdatedtime","formatDistance","e","window","innerWidth","district","onHighlightDistrict","delta","Unknown","fontSize","paddingLeft","position","marginTop","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","ref","forwardRef","districtData","Level","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","deltas","setDeltas","parseData","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","text","parseFloat","toFixed","toString","toTitleCase","str","split","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","parentNode","appendChild","id","viewBox","preserveAspectRatio","India","Assam","Bihar","Chandigarh","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Lakshadweep","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Puducherry","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","getRegionFromState","region","MapExplorer","stateTestData","regionHighlighted","onMapHighlightChange","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","testObj","setTestObj","currentMap","setCurrentMap","useMemo","currentMapData","acc","districtWiseData","find","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","obj","totaltested","updatedon","href","source","target","TimeSeries","Infinity","lastDaysCount","setLastDaysCount","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","logMode","setLogMode","type","chartType","setChartType","moving","setMoving","svgRef1","svgRef2","svgRef3","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","slicedTimeseries","days","sliceTimeseriesFromEnd","graphData","ts","margin","chartRight","chartBottom","T","svg1","svg2","svg3","dateMin","setDate","getDate","dateMax","yScales","xScale","clamp","range","numTicksX","xAxis","g","ticks","yAxis","yScale","tickPadding","svgArray","plotTotal","dataTypesTotal","dataTypesDaily","colors","uniformScaleMin","min","yScaleUniformLinear","max","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","t","transition","duration","typeTotal","typeDaily","empty","reverse","node","getTotalLength","p","getPointAtLength","x","y","repeat","curve","mousemove","mouseout","xm","this","invert","bisectDate","left","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","currentStatusCount","currentDiff","formatedDiff","aria-label","Minigraph","timeSeriesData","setTimeSeriesData","graphElement1","graphElement2","graphElement3","graphElement4","svg4","y1","path1","datum","totalLength1","delay","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","setStateTestData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","activeStateCode","setActiveStateCode","activityLog","setActivityLog","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","setRegionHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","statesDailyResponse","updateLogResponse","stateTestResponse","statewise","cases_time_series","states_tested_data","statecode","refs","htmlFor","checked","onChange","event","disabled","JSON","stringify","selected","activity","update","replace","timestamp","dangerouslySetInnerHTML","__html","Navbar","menuVisible","setMenuVisible","location","pathname","alt","src","pages","page","pageLink","animationDelayForNavbar","displayName","Links","rel","FAQ","faq","setFaq","getFAQs","scrollTo","then","catch","error","question","answer","Banner","snippets","setSnippets","snippet","setSnippet","factoids","random","snippetChooser","interval","setInterval","clearInterval","banner","PatientsView","logs","patient","indexTwo","applyClass","setModal","setPatient","expand","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","document","getElementById","body","classList","add","parseByDate","dateannounced","list","colorMode","gender","typeoftransmission","nationality","getClassNameFn","patientIndexArg","patientIndex","switchPatient","contractedfromwhichpatientsuspected","detectedcity","detecteddistrict","detectedstate","agebracket","statepatientnumber","notes","source1","source2","source3","CSVDownloadLink","csv","Parser","encodeURIComponent","download","DownloadBlock","dataJSON","filterByObject","filters","PatientDB","filteredPatients","setFilteredPatients","setError","useLocation","setColorMode","scaleMode","setScaleMode","subDays","setFilters","raw_data","fetchRawData","handleFilters","newFilters","city","selectedIndex","getSortedValues","setValues","Set","size","GenderChart","defaults","global","tooltips","intersect","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","hover","male","female","unknown","chartData","datasets","chartOptions","layout","padding","right","top","bottom","events","responsive","maintainAspectRatio","callbacks","tooltipItem","dataset","datasetIndex","_meta","currentValue","options","AgeChart","ages","fill","age","scales","xAxes","stacked","gridLines","yAxes","NationalityChart","hasOwnProperty","AllStatesChart","dates","elements","line","statesData","Map","status","trim","has","set","previousValue","sortedMap","code","borderCapStyle","pointBackgroundColor","pointHoverRadius","point","radius","tension","beginAtZero","precision","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","TotalConfirmedChart","deceased","callback","values","DailyConfirmedChart","barDataSet","DeepDive","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","rawDataResponse","stateDailyResponse","usePanelSummaryStyles","makeStyles","theme","content","flexDirection","justifyContent","root","usePanelDetailsStyles","useListStyles","usePanelStyles","marginBottom","useItemTextStyles","primary","fontFamily","fontStyle","fontTransform","secondary","wordWrap","getNumbersLink","initialValue","numbf","numbg","numberList","iv","getFormattedLinkForAccordion","s3","match","formatedLink","links","String","getFormattedLink","rendercell","celli","cell","renderedvalue","link","row","allCells","FormattedCell","editable","React","setValue","reurl1","reinsta","refb","getSuggestions","resources","inputValue","resource","category","includes","descriptionandorserviceprovided","nameoftheorganisation","getSuggestionValue","suggestion","renderSuggestion","ResourceTable","columns","isDesktop","totalCount","onScrollUpdate","indianstate","classesPannelSummary","classesPanel","classesListItemText","classesPanelDetails","classesList","expanded","setExpanded","defaultColumn","Cell","searchValue","setSearchValue","suggestions","setSuggestions","prevIndianState","prevCity","prevCategory","onSuggestionsFetchRequested","inputProps","placeholder","newValue","renderInputComponent","TextField","fullWidth","InputLabelProps","shrink","variant","InputProps","startAdornment","InputAdornment","useTable","initialState","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","alwaysRenderSuggestions","dataLength","hasMore","next","loader","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cellindex","getCellProps","alignItems","maxWidth","overflow","ExpansionPanel","classes","panel","isExpanded","ExpansionPanelSummary","textAlign","limit","substring","parseText","ExpansionPanelDetails","List","disablePadding","dense","ListItem","divider","ListItemText","useFormControlStyles","flexGrow","useInputLabelStyles","textTransform","useMenuItemStyles","usePopOverStyles","zIndex","Resources","partData","setPartData","setCity","setCategory","setIndianState","resourcedict","setResourceDict","showTable","setShowTable","setIsDesktop","classesFormControl","classesInputLabel","classesMenuItem","classesPopOver","anchorEl","setAnchorEl","getResources","checkForResizeEvent","addEventListener","removeEventListener","hashmap","isArray","handleDisclaimerClick","handleDisclaimerClose","isDisclaimerOpen","Boolean","memocols","Header","accessor","isVisible","getCityOptions","getIndianStateOptions","getCategoryOptions","array","citydata","indexOf","filterTable","categorydata","element","changeIndianState","changedstateevent","changeCity","changedcityevent","changeCategory","changedcategoryevent","openSharingTray","message","navigator","share","url","shareUri","encodeURI","screen","w","h","open","openSharingLink","htmlColor","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","InputLabel","Select","native","labelId","defaultValue","pointerEvents","tempArr","concat","Fab","scrollTop","documentElement","history","require","createBrowserHistory","App","view","exact","component","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","fetch","contentType","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b1128cb8.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nconst stateCodes = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli',\r\n  DD: 'Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return stateCodes[code.toUpperCase()];\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      const year = today.getFullYear();\r\n      return new Date(d.date + year) < today;\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat) => ({\r\n    date: new Date(stat.date + ' 2020'),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = moment();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = moment(data[i].date, 'DD-MMM-YY');\r\n    // Skip data from the current day\r\n    if (date.isBefore(today, 'Date')) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        v.push({\r\n          date: date.toDate(),\r\n          dailyconfirmed: +data[i][stateCode] || 0,\r\n          dailyrecovered: +data[i + 1][stateCode] || 0,\r\n          dailydeceased: +data[i + 2][stateCode] || 0,\r\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\r\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\r\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {\r\n  formatDate,\r\n  formatDateAbsolute,\r\n  formatNumber,\r\n} from '../utils/common-functions';\r\nimport {formatDistance} from 'date-fns';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Row(props) {\r\n  const [state, setState] = useState(props.state);\r\n  const [districts, setDistricts] = useState(props.districts);\r\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\r\n  const [sortData, setSortData] = useState({\r\n    sortColumn: localStorage.getItem('district.sortColumn')\r\n      ? localStorage.getItem('district.sortColumn')\r\n      : 'confirmed',\r\n    isAscending: localStorage.getItem('district.isAscending')\r\n      ? localStorage.getItem('district.isAscending') === 'true'\r\n      : false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState(props.state);\r\n  }, [props.state]);\r\n\r\n  useEffect(() => {\r\n    setDistricts(props.districts);\r\n    setSortedDistricts(props.districts);\r\n  }, [props.districts]);\r\n\r\n  const handleReveal = () => {\r\n    props.handleReveal(props.state.state);\r\n  };\r\n\r\n  const sortDistricts = useCallback(\r\n    (aDistricts) => {\r\n      const sorted = {};\r\n      if (aDistricts) {\r\n        Object.keys(aDistricts)\r\n          .sort((district1, district2) => {\r\n            const sortColumn = sortData.sortColumn;\r\n            const value1 =\r\n              sortColumn === 'district'\r\n                ? district1\r\n                : parseInt(aDistricts[district1].confirmed);\r\n            const value2 =\r\n              sortColumn === 'district'\r\n                ? district2\r\n                : parseInt(aDistricts[district2].confirmed);\r\n            const comparisonValue =\r\n              value1 > value2\r\n                ? 1\r\n                : value1 === value2 && district1 > district2\r\n                ? 1\r\n                : -1;\r\n            return sortData.isAscending\r\n              ? comparisonValue\r\n              : comparisonValue * -1;\r\n          })\r\n          .forEach((key) => {\r\n            sorted[key] = aDistricts[key];\r\n          });\r\n        setSortedDistricts(sorted);\r\n      }\r\n    },\r\n    [sortData.isAscending, sortData.sortColumn]\r\n  );\r\n\r\n  const handleSort = (column) => {\r\n    const isAscending =\r\n      sortData.sortColumn === column\r\n        ? !sortData.isAscending\r\n        : sortData.sortColumn === 'district';\r\n    setSortData({\r\n      sortColumn: column,\r\n      isAscending: isAscending,\r\n    });\r\n    localStorage.setItem('district.sortColumn', column);\r\n    localStorage.setItem('district.isAscending', isAscending);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sortDistricts(districts);\r\n  }, [districts, sortData, sortDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr\r\n        className={props.total ? 'state is-total' : 'state'}\r\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\r\n        onMouseLeave={() => props.onHighlightState?.()}\r\n        onTouchStart={() => props.onHighlightState?.(state, props.index)}\r\n        onClick={!props.total ? handleReveal : null}\r\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\r\n      >\r\n        <td style={{fontWeight: 600}}>\r\n          <div className=\"table__title-wrapper\">\r\n            <span\r\n              className={`dropdown ${\r\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\r\n              }`}\r\n              style={{display: !props.total ? '' : 'none'}}\r\n              onClick={() => {\r\n                handleReveal();\r\n              }}\r\n            >\r\n              <Icon.ChevronDown />\r\n            </span>\r\n            {state.state}\r\n            {state.state === 'West Bengal' && (\r\n              <Link to=\"/faq\">\r\n                <Icon.HelpCircle className=\"height-22\" />\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </td>\r\n        <td>\r\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\r\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\r\n          </span>\r\n          <span className=\"table__count-text\">\r\n            {parseInt(state.confirmed) === 0\r\n              ? '-'\r\n              : formatNumber(state.confirmed)}\r\n          </span>\r\n        </td>\r\n        <td\r\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\r\n        >\r\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\r\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\r\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\r\n          </span>*/}\r\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\r\n        </td>\r\n        <td\r\n          style={{\r\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\r\n          }}\r\n        >\r\n          <span className=\"deltas\" style={{color: '#28a745'}}>\r\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\r\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\r\n          </span>\r\n          <span className=\"table__count-text\">\r\n            {parseInt(state.recovered) === 0\r\n              ? '-'\r\n              : formatNumber(state.recovered)}\r\n          </span>\r\n        </td>\r\n        <td\r\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\r\n        >\r\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\r\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\r\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\r\n          </span>\r\n          <span className=\"table__count-text\">\r\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n\r\n      <tr\r\n        className={'state-last-update'}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td colSpan={2}>\r\n          <div className=\"last-update\">\r\n            <h6>Last Updated&nbsp;</h6>\r\n            <h6\r\n              title={\r\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\r\n                  ? ''\r\n                  : formatDateAbsolute(props.state.lastupdatedtime)\r\n              }\r\n            >\r\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\r\n                ? ''\r\n                : `${formatDistance(\r\n                    new Date(formatDate(props.state.lastupdatedtime)),\r\n                    new Date()\r\n                  )} Ago`}\r\n            </h6>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n\r\n      <tr\r\n        className={`district-heading`}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td onClick={(e) => handleSort('district')}>\r\n          <div className=\"heading-content\">\r\n            <abbr title=\"District\">District</abbr>\r\n            <div\r\n              style={{\r\n                display:\r\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\r\n              }}\r\n            >\r\n              {sortData.isAscending ? (\r\n                <div className=\"arrow-up\" />\r\n              ) : (\r\n                <div className=\"arrow-down\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td onClick={(e) => handleSort('confirmed')}>\r\n          <div className=\"heading-content\">\r\n            <abbr\r\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\r\n              title=\"Confirmed\"\r\n            >\r\n              {window.innerWidth <= 769\r\n                ? window.innerWidth <= 375\r\n                  ? 'C'\r\n                  : 'Cnfmd'\r\n                : 'Confirmed'}\r\n            </abbr>\r\n            <div\r\n              style={{\r\n                display:\r\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\r\n              }}\r\n            >\r\n              {sortData.isAscending ? (\r\n                <div className=\"arrow-up\" />\r\n              ) : (\r\n                <div className=\"arrow-down\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n\r\n      {sortedDistricts &&\r\n        Object.keys(sortedDistricts)\r\n          .filter((district) => district.toLowerCase() !== 'unknown')\r\n          .map((district, index) => {\r\n            if (district.toLowerCase() !== 'unknown') {\r\n              return (\r\n                <tr\r\n                  key={index}\r\n                  className={`district`}\r\n                  style={{\r\n                    display: props.reveal && !props.total ? '' : 'none',\r\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\r\n                  }}\r\n                  onMouseEnter={() =>\r\n                    props.onHighlightDistrict?.(district, state, props.index)\r\n                  }\r\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\r\n                  onTouchStart={() =>\r\n                    props.onHighlightDistrict?.(district, state, props.index)\r\n                  }\r\n                >\r\n                  <td style={{fontWeight: 600}}>{district}</td>\r\n                  <td>\r\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n                      {sortedDistricts[district].delta.confirmed > 0 && (\r\n                        <Icon.ArrowUp />\r\n                      )}\r\n                      {sortedDistricts[district].delta.confirmed > 0\r\n                        ? `${sortedDistricts[district].delta.confirmed}`\r\n                        : ''}\r\n                    </span>\r\n                    <span className=\"table__count-text\">\r\n                      {formatNumber(sortedDistricts[district].confirmed)}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n\r\n      {sortedDistricts?.Unknown && (\r\n        <React.Fragment>\r\n          <tr\r\n            className={`district`}\r\n            style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n          >\r\n            <td style={{fontWeight: 600}}>\r\n              Unknown{' '}\r\n              <span style={{fontSize: '0.75rem', color: '#201aa299'}}>#</span>\r\n            </td>\r\n            <td>\r\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\r\n                  <Icon.ArrowUp />\r\n                )}\r\n                {sortedDistricts['Unknown'].delta.confirmed > 0\r\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\r\n                  : ''}\r\n              </span>\r\n              <span className=\"table__count-text\">\r\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n          <span\r\n            style={{\r\n              display: props.reveal && !props.total ? '' : 'none',\r\n              fontSize: '0.75rem',\r\n              color: '#201aa299',\r\n            }}\r\n          >\r\n            #\r\n          </span>\r\n          <div\r\n            style={{\r\n              display: props.reveal && !props.total ? '' : 'none',\r\n              fontSize: '0.5rem',\r\n              paddingLeft: '1rem',\r\n              position: 'absolute',\r\n              marginTop: '-0.85rem',\r\n              color: '#201aa299',\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            Awaiting patient-level details from State Bulletin\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <tr\r\n        className={`spacer`}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Row from './row';\r\n\r\nfunction Table(props) {\r\n  const [states, setStates] = useState(props.states);\r\n  const [revealedStates, setRevealedStates] = useState({});\r\n  const [districts, setDistricts] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [sortData, setSortData] = useState({\r\n    sortColumn: localStorage.getItem('state.sortColumn')\r\n      ? localStorage.getItem('state.sortColumn')\r\n      : 'confirmed',\r\n    isAscending: localStorage.getItem('state.isAscending')\r\n      ? localStorage.getItem('state.isAscending') === 'true'\r\n      : false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.summary === true) {\r\n      setStates(props.states.slice(0, 9));\r\n    } else {\r\n      setStates(props.states);\r\n    }\r\n  }, [props.states, props.summary]);\r\n\r\n  useEffect(() => {\r\n    if (props.states[0]) {\r\n      setRevealedStates(\r\n        props.states.reduce((a, state) => {\r\n          return {...a, [state.state]: false};\r\n        }, {})\r\n      );\r\n    }\r\n  }, [props.states]);\r\n\r\n  useEffect(() => {\r\n    if (states.length > 0) {\r\n      // slice to ignore the first item which is the total count\r\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\r\n    }\r\n  }, [states]);\r\n\r\n  useEffect(() => {\r\n    setDistricts(props.stateDistrictWiseData);\r\n  }, [props.stateDistrictWiseData]);\r\n\r\n  const doSort = (e, props) => {\r\n    const totalRow = states.splice(0, 1);\r\n    states.sort((StateData1, StateData2) => {\r\n      const sortColumn = sortData.sortColumn;\r\n      let value1 = StateData1[sortColumn];\r\n      let value2 = StateData2[sortColumn];\r\n\r\n      if (sortColumn !== 'state') {\r\n        value1 = parseInt(StateData1[sortColumn]);\r\n        value2 = parseInt(StateData2[sortColumn]);\r\n      }\r\n\r\n      if (sortData.isAscending) {\r\n        return value1 > value2\r\n          ? 1\r\n          : value1 === value2 && StateData1['state'] > StateData2['state']\r\n          ? 1\r\n          : -1;\r\n      } else {\r\n        return value1 < value2\r\n          ? 1\r\n          : value1 === value2 && StateData1['state'] > StateData2['state']\r\n          ? 1\r\n          : -1;\r\n      }\r\n    });\r\n    states.unshift(totalRow[0]);\r\n  };\r\n\r\n  const handleSort = (e, props) => {\r\n    const currentsortColumn = e.currentTarget\r\n      .querySelector('abbr')\r\n      .getAttribute('title')\r\n      .toLowerCase();\r\n    const isAscending =\r\n      sortData.sortColumn === currentsortColumn\r\n        ? !sortData.isAscending\r\n        : sortData.sortColumn === 'state';\r\n    setSortData({\r\n      sortColumn: currentsortColumn,\r\n      isAscending: isAscending,\r\n    });\r\n    localStorage.setItem('state.sortColumn', currentsortColumn);\r\n    localStorage.setItem('state.isAscending', isAscending);\r\n  };\r\n\r\n  const handleReveal = (state) => {\r\n    setRevealedStates({\r\n      ...revealedStates,\r\n      [state]: !revealedStates[state],\r\n    });\r\n  };\r\n\r\n  doSort();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5\r\n        className=\"table-fineprint fadeInUp\"\r\n        style={{animationDelay: '1.8s'}}\r\n        ref={props.forwardRef}\r\n      >\r\n        Compiled from State Govt. numbers <Link to=\"/faq\">Know More</Link>\r\n      </h5>\r\n      <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              className=\"sticky state-heading\"\r\n              onClick={(e) => handleSort(e, props)}\r\n            >\r\n              <div className=\"heading-content\">\r\n                <abbr title=\"State\">State/UT</abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\r\n                  title=\"Confirmed\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'C'\r\n                      : 'Cnfmd'\r\n                    : 'Confirmed'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\r\n                  title=\"Active\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'A'\r\n                      : 'Actv'\r\n                    : 'Active'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\r\n                  title=\"Recovered\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'R'\r\n                      : 'Rcvrd'\r\n                    : 'Recovered'}\r\n                </abbr>\r\n                <div\r\n                  className={\r\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\r\n                  }\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\r\n                  title=\"Deaths\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'D'\r\n                      : 'Dcsd'\r\n                    : 'Deceased'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {states.map((state, index) => {\r\n            if (index !== 0 && state.confirmed > 0) {\r\n              return (\r\n                <Row\r\n                  key={index}\r\n                  index={index}\r\n                  state={state}\r\n                  total={false}\r\n                  reveal={revealedStates[state.state]}\r\n                  districts={\r\n                    state.state in districts\r\n                      ? districts[state.state].districtData\r\n                      : []\r\n                  }\r\n                  onHighlightState={props.onHighlightState}\r\n                  onHighlightDistrict={props.onHighlightDistrict}\r\n                  handleReveal={handleReveal}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </tbody>\r\n\r\n        <tbody>\r\n          {states.length > 1 && props.summary === false && (\r\n            <Row\r\n              key={0}\r\n              state={states[0]}\r\n              total={true}\r\n              onHighlightState={props.onHighlightState}\r\n            />\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\r\n        {count} States/UTS Affected\r\n      </h5>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {formatNumber} from '../utils/common-functions';\r\n\r\nfunction Level(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const [confirmed, setConfirmed] = useState(0);\r\n  const [active, setActive] = useState(0);\r\n  const [recoveries, setRecoveries] = useState(0);\r\n  const [deaths, setDeaths] = useState(0);\r\n  const [deltas, setDeltas] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    const parseData = () => {\r\n      let confirmed = 0;\r\n      let active = 0;\r\n      let recoveries = 0;\r\n      let deaths = 0;\r\n      let deltas = {};\r\n      data.forEach((state, index) => {\r\n        if (index !== 0) {\r\n          confirmed += parseInt(state.confirmed);\r\n          active += parseInt(state.active);\r\n          recoveries += parseInt(state.recovered);\r\n          deaths += parseInt(state.deaths);\r\n        } else {\r\n          deltas = {\r\n            confirmed: parseInt(state.deltaconfirmed),\r\n            deaths: parseInt(state.deltadeaths),\r\n            recovered: parseInt(state.deltarecovered),\r\n          };\r\n        }\r\n      });\r\n      setConfirmed(confirmed);\r\n      setActive(active);\r\n      setRecoveries(recoveries);\r\n      setDeaths(deaths);\r\n      setDeltas(deltas);\r\n    };\r\n    parseData();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"Level\">\r\n      <div\r\n        className=\"level-item is-cherry fadeInUp\"\r\n        style={{animationDelay: '1s'}}\r\n      >\r\n        <h5>Confirmed</h5>\r\n        <h4>\r\n          [\r\n          {deltas\r\n            ? deltas.confirmed > 0\r\n              ? '+' + formatNumber(deltas.confirmed)\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1>{formatNumber(confirmed)} </h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-blue fadeInUp\"\r\n        style={{animationDelay: '1.1s'}}\r\n      >\r\n        <h5 className=\"heading\">Active</h5>\r\n        <h4>&nbsp;</h4>\r\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\r\n        <h1 className=\"title has-text-info\">{formatNumber(active)}</h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-green fadeInUp\"\r\n        style={{animationDelay: '1.2s'}}\r\n      >\r\n        <h5 className=\"heading\">Recovered</h5>\r\n        <h4>\r\n          [\r\n          {deltas\r\n            ? deltas.recovered > 0\r\n              ? '+' + formatNumber(deltas.recovered)\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-success\">{formatNumber(recoveries)} </h1>\r\n      </div>\r\n\r\n      <div\r\n        className=\"level-item is-gray fadeInUp\"\r\n        style={{animationDelay: '1.3s'}}\r\n      >\r\n        <h5 className=\"heading\">Deceased</h5>\r\n        <h4>\r\n          [\r\n          {deltas\r\n            ? deltas.deaths > 0\r\n              ? '+' + formatNumber(deltas.deaths)\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-grey\">{formatNumber(deaths)}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Level;\r\n","export const MAP_TYPES = {\r\n  COUNTRY: 'country',\r\n  STATE: 'state',\r\n};\r\n\r\nexport const MAPS_DIR = '/maps';\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport * as d3 from 'd3';\r\nimport {legendColor} from 'd3-svg-legend';\r\nimport * as topojson from 'topojson';\r\nimport {MAP_TYPES} from '../constants';\r\n\r\nconst propertyFieldMap = {\r\n  country: 'st_nm',\r\n  state: 'district',\r\n};\r\n\r\nfunction ChoroplethMap({\r\n  statistic,\r\n  mapData,\r\n  setHoveredRegion,\r\n  mapMeta,\r\n  changeMap,\r\n  selectedRegion,\r\n  setSelectedRegion,\r\n}) {\r\n  const choroplethMap = useRef(null);\r\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\r\n\r\n  const ready = useCallback(\r\n    (geoData) => {\r\n      d3.selectAll('svg#chart > *').remove();\r\n      const propertyField = propertyFieldMap[mapMeta.mapType];\r\n      const maxInterpolation = 0.8;\r\n      const svg = d3.select(choroplethMap.current);\r\n      const width = +svg.attr('width');\r\n      const height = +svg.attr('height');\r\n\r\n      const handleMouseover = (name) => {\r\n        try {\r\n          setHoveredRegion(name, mapMeta);\r\n          setSelectedRegion(name);\r\n        } catch (err) {\r\n          console.log('err', err);\r\n        }\r\n      };\r\n\r\n      const topology = topojson.feature(\r\n        geoData,\r\n        geoData.objects[mapMeta.graphObjectName]\r\n      );\r\n\r\n      const projection = d3.geoMercator();\r\n\r\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\r\n        projection.fitSize([width, height], topology);\r\n      else\r\n        projection.fitExtent(\r\n          [\r\n            [90, 20],\r\n            [width, height],\r\n          ],\r\n          topology\r\n        );\r\n\r\n      const path = d3.geoPath(projection);\r\n\r\n      let onceTouchedRegion = null;\r\n\r\n      svg\r\n        .append('g')\r\n        .attr('class', 'states')\r\n        .selectAll('path')\r\n        .data(topology.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('class', 'path-region')\r\n        .attr('fill', function (d) {\r\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\r\n          const color =\r\n            n === 0\r\n              ? '#ffffff'\r\n              : d3.interpolateReds(\r\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\r\n                );\r\n          return color;\r\n        })\r\n        .attr('d', path)\r\n        .attr('pointer-events', 'all')\r\n        .on('mouseover', (d) => {\r\n          handleMouseover(d.properties[propertyField]);\r\n        })\r\n        .on('mouseleave', (d) => {\r\n          setSelectedRegion(null);\r\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n        })\r\n        .on('touchstart', (d) => {\r\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\r\n          else onceTouchedRegion = d;\r\n        })\r\n        .on('click', (d) => {\r\n          if (onceTouchedRegion) {\r\n            return;\r\n          }\r\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\r\n            return;\r\n          }\r\n          changeMap(d.properties[propertyField], mapMeta.mapType);\r\n        })\r\n        .style('cursor', 'pointer')\r\n        .append('title')\r\n        .text(function (d) {\r\n          const value = mapData[d.properties[propertyField]] || 0;\r\n          return (\r\n            Number(\r\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\r\n            ).toString() +\r\n            '% from ' +\r\n            toTitleCase(d.properties[propertyField])\r\n          );\r\n        });\r\n\r\n      svg\r\n        .append('path')\r\n        .attr('stroke', '#ff073a20')\r\n        .attr('fill', 'none')\r\n        .attr('stroke-width', 2)\r\n        .attr(\r\n          'd',\r\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\r\n        );\r\n    },\r\n    [\r\n      mapData,\r\n      mapMeta,\r\n      statistic.total,\r\n      statistic.maxConfirmed,\r\n      changeMap,\r\n      setHoveredRegion,\r\n      setSelectedRegion,\r\n    ]\r\n  );\r\n\r\n  const toTitleCase = (str) => {\r\n    str = str.toLowerCase().split(' ');\r\n    for (let i = 0; i < str.length; i++) {\r\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\r\n    }\r\n    return str.join(' ');\r\n  };\r\n\r\n  const renderData = useCallback(() => {\r\n    const svg = d3.select(choroplethMap.current);\r\n\r\n    // Colorbar\r\n    const maxInterpolation = 0.8;\r\n    const color = d3\r\n      .scaleSequential(d3.interpolateReds)\r\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\r\n\r\n    let cells = null;\r\n    let label = null;\r\n\r\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\r\n      if (i === genLength - 1) {\r\n        const n = Math.floor(generatedLabels[i]);\r\n        return `${n}+`;\r\n      } else {\r\n        const n1 = 1 + Math.floor(generatedLabels[i]);\r\n        const n2 = Math.floor(generatedLabels[i + 1]);\r\n        return `${n1} - ${n2}`;\r\n      }\r\n    };\r\n\r\n    const numCells = 6;\r\n    const delta = Math.floor(\r\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\r\n        (numCells - 1)\r\n    );\r\n\r\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\r\n\r\n    svg\r\n      .append('g')\r\n      .attr('class', 'legendLinear')\r\n      .attr('transform', 'translate(1, 335)');\r\n\r\n    const legendLinear = legendColor()\r\n      .shapeWidth(36)\r\n      .shapeHeight(10)\r\n      .cells(cells)\r\n      .titleWidth(3)\r\n      .labels(label)\r\n      .title('Confirmed Cases')\r\n      .orient('vertical')\r\n      .scale(color);\r\n\r\n    svg\r\n      .select('.legendLinear')\r\n      .call(legendLinear)\r\n      .selectAll('text')\r\n      .style('font-size', '10px');\r\n  }, [statistic.maxConfirmed]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await d3.json(mapMeta.geoDataFile);\r\n      if (statistic && choroplethMap.current) {\r\n        ready(data);\r\n        renderData();\r\n        setSvgRenderCount((prevCount) => prevCount + 1);\r\n      }\r\n    })();\r\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\r\n\r\n  const highlightRegionInMap = (name) => {\r\n    const paths = d3.selectAll('.path-region');\r\n    paths.classed('map-hover', (d, i, nodes) => {\r\n      const propertyField =\r\n        'district' in d.properties\r\n          ? propertyFieldMap['state']\r\n          : propertyFieldMap['country'];\r\n      if (name === d.properties[propertyField]) {\r\n        nodes[i].parentNode.appendChild(nodes[i]);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    highlightRegionInMap(selectedRegion);\r\n  }, [svgRenderCount, selectedRegion]);\r\n\r\n  return (\r\n    <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\r\n      <svg\r\n        id=\"chart\"\r\n        width=\"480\"\r\n        height=\"450\"\r\n        viewBox=\"0 0 480 450\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n        ref={choroplethMap}\r\n      ></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChoroplethMap;\r\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport ChoroplethMap from './choropleth';\r\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\r\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\r\nimport {formatDistance, format, parse} from 'date-fns';\r\nimport {formatNumber} from '../utils/common-functions';\r\nimport * as Icon from 'react-feather';\r\n\r\nconst mapMeta = {\r\n  India: {\r\n    name: 'India',\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n    graphObjectName: 'india',\r\n  },\r\n  'Andaman and Nicobar Islands': {\r\n    name: 'Andaman and Nicobar Islands',\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'andamannicobarislands_district',\r\n  },\r\n  'Arunachal Pradesh': {\r\n    name: 'Arunachal Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'arunachalpradesh_district',\r\n  },\r\n  'Andhra Pradesh': {\r\n    name: 'Andhra Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'andhrapradesh_district',\r\n  },\r\n\r\n  Assam: {\r\n    name: 'Assam',\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'assam_district',\r\n  },\r\n  Bihar: {\r\n    name: 'Bihar',\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'bihar_district',\r\n  },\r\n  Chandigarh: {\r\n    name: 'Chandigarh',\r\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'chandigarh_district',\r\n  },\r\n  Chhattisgarh: {\r\n    name: 'Chhattisgarh',\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'chhattisgarh_district',\r\n  },\r\n  'Dadra and Nagar Haveli': {\r\n    name: 'Dadra and Nagar Haveli',\r\n    geoDataFile: `${MAPS_DIR}/dadranagarhaveli.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'dadranagarhaveli_district',\r\n  },\r\n  Delhi: {\r\n    name: 'Delhi',\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'delhi_district',\r\n  },\r\n  Karnataka: {\r\n    name: 'Karnataka',\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'karnataka_district',\r\n  },\r\n  Kerala: {\r\n    name: 'Kerala',\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'kerala_district',\r\n  },\r\n  Goa: {\r\n    name: 'Goa',\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'goa_district',\r\n  },\r\n  Gujarat: {\r\n    name: 'Gujarat',\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'gujarat_district',\r\n  },\r\n  Haryana: {\r\n    name: 'Haryana',\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'haryana_district',\r\n  },\r\n  'Himachal Pradesh': {\r\n    name: 'Himachal Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'himachalpradesh_district',\r\n  },\r\n  'Jammu and Kashmir': {\r\n    name: 'Jammu and Kashmir',\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'jammukashmir_district',\r\n  },\r\n  Jharkhand: {\r\n    name: 'Jharkhand',\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'jharkhand_district',\r\n  },\r\n  Ladakh: {\r\n    name: 'Ladakh',\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'ladakh_district',\r\n  },\r\n  Lakshadweep: {\r\n    name: 'Lakshadweep',\r\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'lakshadweep_district',\r\n  },\r\n  'Madhya Pradesh': {\r\n    name: 'Madhya Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'madhyapradesh_district',\r\n  },\r\n  Maharashtra: {\r\n    name: 'Maharashtra',\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'maharashtra_district',\r\n  },\r\n  Manipur: {\r\n    name: 'Manipur',\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'manipur_district',\r\n  },\r\n  Meghalaya: {\r\n    name: 'Meghalaya',\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'meghalaya_district',\r\n  },\r\n  Mizoram: {\r\n    name: 'Mizoram',\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'mizoram_district',\r\n  },\r\n  Nagaland: {\r\n    name: 'Nagaland',\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'nagaland_district',\r\n  },\r\n  Odisha: {\r\n    name: 'Odisha',\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'odisha_district',\r\n  },\r\n  Puducherry: {\r\n    name: 'Puducherry',\r\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'puducherry_district',\r\n  },\r\n  Punjab: {\r\n    name: 'Punjab',\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'punjab_district',\r\n  },\r\n  Rajasthan: {\r\n    name: 'Rajasthan',\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'rajasthan_district',\r\n  },\r\n  Sikkim: {\r\n    name: 'Sikkim',\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'sikkim_district',\r\n  },\r\n  'Tamil Nadu': {\r\n    name: 'Tamil Nadu',\r\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'tamilnadu_district',\r\n  },\r\n  Telangana: {\r\n    name: 'Telangana',\r\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'telangana_district',\r\n  },\r\n  Tripura: {\r\n    name: 'Tripura',\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'tripura_district',\r\n  },\r\n  Uttarakhand: {\r\n    name: 'Uttarakhand',\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'uttarakhand_district',\r\n  },\r\n  'Uttar Pradesh': {\r\n    name: 'Uttar Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'uttarpradesh_district',\r\n  },\r\n\r\n  'West Bengal': {\r\n    name: 'West Bengal',\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'westbengal_district',\r\n  },\r\n};\r\n\r\nconst getRegionFromState = (state) => {\r\n  if (!state) return;\r\n  const region = {...state};\r\n  if (!region.name) region.name = region.state;\r\n  return region;\r\n};\r\n\r\nconst getRegionFromDistrict = (districtData, name) => {\r\n  if (!districtData) return;\r\n  const region = {...districtData};\r\n  if (!region.name) region.name = name;\r\n  return region;\r\n};\r\n\r\nfunction MapExplorer({\r\n  forwardRef,\r\n  states,\r\n  stateDistrictWiseData,\r\n  stateTestData,\r\n  regionHighlighted,\r\n  onMapHighlightChange,\r\n}) {\r\n  const [selectedRegion, setSelectedRegion] = useState({});\r\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\r\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\r\n    getRegionFromState(states[0])\r\n  );\r\n  const [testObj, setTestObj] = useState({});\r\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\r\n\r\n  const [statistic, currentMapData] = useMemo(() => {\r\n    const statistic = {total: 0, maxConfirmed: 0};\r\n    let currentMapData = {};\r\n\r\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\r\n      currentMapData = states.reduce((acc, state) => {\r\n        if (state.state === 'Total') {\r\n          return acc;\r\n        }\r\n        const confirmed = parseInt(state.confirmed);\r\n        statistic.total += confirmed;\r\n        if (confirmed > statistic.maxConfirmed) {\r\n          statistic.maxConfirmed = confirmed;\r\n        }\r\n\r\n        acc[state.state] = state.confirmed;\r\n        return acc;\r\n      }, {});\r\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\r\n      const districtWiseData = (\r\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\r\n      ).districtData;\r\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\r\n        const confirmed = parseInt(districtWiseData[district].confirmed);\r\n        statistic.total += confirmed;\r\n        if (confirmed > statistic.maxConfirmed) {\r\n          statistic.maxConfirmed = confirmed;\r\n        }\r\n        acc[district] = districtWiseData[district].confirmed;\r\n        return acc;\r\n      }, {});\r\n    }\r\n    return [statistic, currentMapData];\r\n  }, [currentMap, states, stateDistrictWiseData]);\r\n\r\n  const setHoveredRegion = useCallback(\r\n    (name, currentMap) => {\r\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\r\n        const region = getRegionFromState(\r\n          states.find((state) => name === state.state)\r\n        );\r\n        setCurrentHoveredRegion(region);\r\n        setPanelRegion(region);\r\n        onMapHighlightChange(region);\r\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\r\n        const state = stateDistrictWiseData[currentMap.name] || {\r\n          districtData: {},\r\n        };\r\n        let districtData = state.districtData[name];\r\n        if (!districtData) {\r\n          districtData = {\r\n            confirmed: 0,\r\n            active: 0,\r\n            deaths: 0,\r\n            recovered: 0,\r\n          };\r\n        }\r\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\r\n        const panelRegion = getRegionFromState(\r\n          states.find((state) => currentMap.name === state.state)\r\n        );\r\n        setPanelRegion(panelRegion);\r\n        onMapHighlightChange(panelRegion);\r\n      }\r\n    },\r\n    [states, stateDistrictWiseData, onMapHighlightChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (regionHighlighted === undefined) {\r\n      return;\r\n    } else if (regionHighlighted === null) {\r\n      setSelectedRegion(null);\r\n      return;\r\n    }\r\n    const isState = !('district' in regionHighlighted);\r\n    if (isState) {\r\n      const newMap = mapMeta['India'];\r\n      setCurrentMap(newMap);\r\n      const region = getRegionFromState(regionHighlighted.state);\r\n      setHoveredRegion(region.name, newMap);\r\n      setSelectedRegion(region.name);\r\n    } else {\r\n      const newMap = mapMeta[regionHighlighted.state.state];\r\n      if (!newMap) {\r\n        return;\r\n      }\r\n      setCurrentMap(newMap);\r\n      setHoveredRegion(regionHighlighted.district, newMap);\r\n      setSelectedRegion(regionHighlighted.district);\r\n    }\r\n  }, [regionHighlighted, setHoveredRegion]);\r\n\r\n  const switchMapToState = useCallback(\r\n    (name) => {\r\n      const newMap = mapMeta[name];\r\n      if (!newMap) {\r\n        return;\r\n      }\r\n      setCurrentMap(newMap);\r\n      setSelectedRegion(null);\r\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\r\n        setHoveredRegion(states[0].state, newMap);\r\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\r\n        const {districtData} = stateDistrictWiseData[name] || {};\r\n        const topDistrict = Object.keys(districtData)\r\n          .filter((name) => name !== 'Unknown')\r\n          .sort((a, b) => {\r\n            return districtData[b].confirmed - districtData[a].confirmed;\r\n          })[0];\r\n        setHoveredRegion(topDistrict, newMap);\r\n      }\r\n    },\r\n    [setHoveredRegion, stateDistrictWiseData, states]\r\n  );\r\n\r\n  const {name, lastupdatedtime} = currentHoveredRegion;\r\n\r\n  useEffect(() => {\r\n    setTestObj(\r\n      stateTestData.find(\r\n        (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\r\n      )\r\n    );\r\n  }, [panelRegion, stateTestData, testObj]);\r\n\r\n  return (\r\n    <div\r\n      className=\"MapExplorer fadeInUp\"\r\n      style={{animationDelay: '1.5s'}}\r\n      ref={forwardRef}\r\n    >\r\n      <div className=\"header\">\r\n        <h1>{currentMap.name}</h1>\r\n        <h6>\r\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\r\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state/ut' : 'district'}{' '}\r\n          for more details\r\n        </h6>\r\n      </div>\r\n\r\n      <div className=\"map-stats\">\r\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\r\n          <h5>{window.innerWidth <= 769 ? 'Cnfmd' : 'Confirmed'}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"stats is-blue fadeInUp\"\r\n          style={{animationDelay: '2.1s'}}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? 'Actv' : 'Active'}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.active)}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"stats is-green fadeInUp\"\r\n          style={{animationDelay: '2.2s'}}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? 'Rcvrd' : 'Recovered'}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"stats is-gray fadeInUp\"\r\n          style={{animationDelay: '2.3s'}}\r\n        >\r\n          <h5>{window.innerWidth <= 769 ? 'Dcsd' : 'Deceased'}</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n          <div\r\n            className=\"stats is-purple tested fadeInUp\"\r\n            style={{animationDelay: '2.4s'}}\r\n          >\r\n            <h5>{window.innerWidth <= 769 ? 'Tested' : 'Tested'}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h1>{formatNumber(testObj?.totaltested)}</h1>\r\n            </div>\r\n            <h6 className=\"timestamp\">\r\n              {!isNaN(new Date(testObj?.updatedon))\r\n                ? `As of ${format(\r\n                    parse(testObj?.updatedon, 'dd/MM/yyyy', new Date()),\r\n                    'dd MMM'\r\n                  )}`\r\n                : ''}\r\n            </h6>\r\n            {testObj?.totaltested?.length > 1 && (\r\n              <a href={testObj.source} target=\"_noblank\">\r\n                <Icon.Link />\r\n              </a>\r\n            )}\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\r\n        <h2>{name}</h2>\r\n        {lastupdatedtime && (\r\n          <div\r\n            className={`last-update ${\r\n              currentMap.mapType === MAP_TYPES.STATE\r\n                ? 'district-last-update'\r\n                : 'state-last-update'\r\n            }`}\r\n          >\r\n            <h6>Last Updated</h6>\r\n            <h3\r\n              title={\r\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\r\n                  ? ''\r\n                  : formatDateAbsolute(lastupdatedtime)\r\n              }\r\n            >\r\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\r\n                ? ''\r\n                : formatDistance(\r\n                    new Date(formatDate(lastupdatedtime)),\r\n                    new Date()\r\n                  ) + ' Ago'}\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n        {currentMap.mapType === MAP_TYPES.STATE ? (\r\n          <h4 className=\"district-confirmed\">\r\n            Confirmed cases:{' '}\r\n            {currentMapData[currentHoveredRegion.name]\r\n              ? currentMapData[currentHoveredRegion.name]\r\n              : 0}\r\n          </h4>\r\n        ) : null}\r\n\r\n        {currentMap.mapType === MAP_TYPES.STATE &&\r\n        currentMapData.Unknown > 0 ? (\r\n          <h4 className=\"unknown\">\r\n            Districts unknown for {currentMapData.Unknown} people\r\n          </h4>\r\n        ) : null}\r\n\r\n        {currentMap.mapType === MAP_TYPES.STATE ? (\r\n          <div\r\n            className=\"button back-button\"\r\n            onClick={() => switchMapToState('India')}\r\n          >\r\n            Back\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <ChoroplethMap\r\n        statistic={statistic}\r\n        mapMeta={currentMap}\r\n        mapData={currentMapData}\r\n        setHoveredRegion={setHoveredRegion}\r\n        changeMap={switchMapToState}\r\n        selectedRegion={selectedRegion}\r\n        setSelectedRegion={setSelectedRegion}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapExplorer;\r\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport * as d3 from 'd3';\r\nimport moment from 'moment';\r\n\r\nimport {sliceTimeseriesFromEnd} from '../utils/common-functions';\r\nimport {useResizeObserver} from '../utils/hooks';\r\nimport {formatNumber} from '../utils/common-functions';\r\n\r\nfunction TimeSeries(props) {\r\n  const [lastDaysCount, setLastDaysCount] = useState(\r\n    window.innerWidth > 512 ? Infinity : 30\r\n  );\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [datapoint, setDatapoint] = useState({});\r\n  const [index, setIndex] = useState(10);\r\n  const [mode, setMode] = useState(props.mode);\r\n  const [logMode, setLogMode] = useState(props.logMode);\r\n  const [chartType, setChartType] = useState(props.type);\r\n  const [moving, setMoving] = useState(false);\r\n\r\n  const svgRef1 = useRef();\r\n  const svgRef2 = useRef();\r\n  const svgRef3 = useRef();\r\n\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      const slicedTimeseries = sliceTimeseriesFromEnd(\r\n        props.timeseries,\r\n        lastDaysCount\r\n      );\r\n      setIndex(slicedTimeseries.length - 1);\r\n      setTimeseries(slicedTimeseries);\r\n    }\r\n  }, [props.timeseries, lastDaysCount]);\r\n\r\n  useEffect(() => {\r\n    setMode(props.mode);\r\n  }, [props.mode]);\r\n\r\n  useEffect(() => {\r\n    setLogMode(props.logMode);\r\n  }, [props.logMode]);\r\n\r\n  useEffect(() => {\r\n    setChartType(props.type);\r\n  }, [props.type]);\r\n\r\n  const graphData = useCallback(\r\n    (ts) => {\r\n      if (!dimensions) return;\r\n      const width = dimensions.width;\r\n      const height = dimensions.height;\r\n\r\n      // Margins\r\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\r\n      const chartRight = width - margin.right;\r\n      const chartBottom = height - margin.bottom;\r\n\r\n      const T = ts.length;\r\n      const yBuffer = 1.1;\r\n\r\n      setDatapoint(ts[T - 1]);\r\n      setIndex(T - 1);\r\n\r\n      const svg1 = d3.select(svgRef1.current);\r\n      const svg2 = d3.select(svgRef2.current);\r\n      const svg3 = d3.select(svgRef3.current);\r\n\r\n      const dateMin = new Date(ts[0]['date']);\r\n      dateMin.setDate(dateMin.getDate() - 1);\r\n      const dateMax = new Date(ts[T - 1]['date']);\r\n      dateMax.setDate(dateMax.getDate() + 1);\r\n\r\n      const xScale = d3\r\n        .scaleTime()\r\n        .clamp(true)\r\n        .domain([dateMin, dateMax])\r\n        .range([margin.left, chartRight]);\r\n\r\n      // Number of x-axis ticks\r\n      const numTicksX = width < 480 ? 4 : 7;\r\n\r\n      const xAxis = (g) =>\r\n        g\r\n          .attr('class', 'x-axis')\r\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\r\n          .style('transform', `translateY(${chartBottom}px)`);\r\n\r\n      const yAxis = (g, yScale) =>\r\n        g\r\n          .attr('class', 'y-axis')\r\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\r\n          .style('transform', `translateX(${chartRight}px)`);\r\n\r\n      // Arrays of objects\r\n      const svgArray = [svg1, svg2, svg3];\r\n      const plotTotal = chartType === 1;\r\n      const dataTypesTotal = [\r\n        'totalconfirmed',\r\n        'totalrecovered',\r\n        'totaldeceased',\r\n      ];\r\n      const dataTypesDaily = [\r\n        'dailyconfirmed',\r\n        'dailyrecovered',\r\n        'dailydeceased',\r\n      ];\r\n\r\n      const colors = ['#ff073a', '#28a745', '#6c757d'];\r\n\r\n      let yScales;\r\n      if (plotTotal) {\r\n        let uniformScaleMin = Infinity;\r\n        dataTypesTotal.forEach((type) => {\r\n          uniformScaleMin = Math.min(\r\n            uniformScaleMin,\r\n            d3.min(ts, (d) => d[type])\r\n          );\r\n        });\r\n        const yScaleUniformLinear = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([\r\n            uniformScaleMin,\r\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\r\n          ])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        const yScaleUniformLog = d3\r\n          .scaleLog()\r\n          .clamp(true)\r\n          .domain([\r\n            Math.max(1, uniformScaleMin),\r\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.totalconfirmed)),\r\n          ])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesTotal.map((type) => {\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([\r\n              d3.min(ts, (d) => d[type]),\r\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          const yScaleLog = d3\r\n            .scaleLog()\r\n            .clamp(true)\r\n            .domain([\r\n              Math.max(\r\n                1,\r\n                d3.min(ts, (d) => d[type])\r\n              ),\r\n              Math.max(1, yBuffer * d3.max(ts, (d) => d[type])),\r\n            ])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\r\n          else return mode ? yScaleUniformLinear : yScaleLinear;\r\n        });\r\n      } else {\r\n        const yScaleDailyUniform = d3\r\n          .scaleLinear()\r\n          .clamp(true)\r\n          .domain([\r\n            0,\r\n            Math.max(1, yBuffer * d3.max(ts, (d) => d.dailyconfirmed)),\r\n          ])\r\n          .nice()\r\n          .range([chartBottom, margin.top]);\r\n\r\n        yScales = dataTypesDaily.map((type) => {\r\n          const yScaleLinear = d3\r\n            .scaleLinear()\r\n            .clamp(true)\r\n            .domain([0, Math.max(1, yBuffer * d3.max(ts, (d) => d[type]))])\r\n            .nice()\r\n            .range([chartBottom, margin.top]);\r\n          return mode ? yScaleDailyUniform : yScaleLinear;\r\n        });\r\n      }\r\n\r\n      /* Focus dots */\r\n      const focus = svgArray.map((svg, i) => {\r\n        return svg\r\n          .selectAll('.focus')\r\n          .data([ts[T - 1]], (d) => d.date)\r\n          .join('circle')\r\n          .attr('class', 'focus')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('r', 4);\r\n      });\r\n\r\n      function mousemove() {\r\n        const xm = d3.mouse(this)[0];\r\n        const date = xScale.invert(xm);\r\n        const bisectDate = d3.bisector((d) => d.date).left;\r\n        let i = bisectDate(ts, date, 1);\r\n        if (0 <= i && i < T) {\r\n          if (date - ts[i - 1].date < ts[i].date - date) --i;\r\n          setDatapoint(ts[i]);\r\n          setIndex(i);\r\n          setMoving(true);\r\n          const d = ts[i];\r\n          focus.forEach((f, j) => {\r\n            const yScale = yScales[j];\r\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\r\n          });\r\n        }\r\n      }\r\n\r\n      function mouseout() {\r\n        setDatapoint(ts[T - 1]);\r\n        setIndex(T - 1);\r\n        setMoving(false);\r\n        focus.forEach((f, j) => {\r\n          const yScale = yScales[j];\r\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\r\n          f.attr('cx', xScale(ts[T - 1].date)).attr(\r\n            'cy',\r\n            yScale(ts[T - 1][type])\r\n          );\r\n        });\r\n      }\r\n\r\n      /* Begin drawing charts */\r\n      svgArray.forEach((svg, i) => {\r\n        // Transition interval\r\n        const t = svg.transition().duration(500);\r\n        const typeTotal = dataTypesTotal[i];\r\n        const typeDaily = dataTypesDaily[i];\r\n        const type = plotTotal ? typeTotal : typeDaily;\r\n\r\n        const color = colors[i];\r\n        const yScale = yScales[i];\r\n        // WARNING: Bad code ahead.\r\n        /* X axis */\r\n        if (svg.select('.x-axis').empty()) {\r\n          svg.append('g').attr('class', 'x-axis').call(xAxis);\r\n        } else {\r\n          svg.select('.x-axis').transition(t).call(xAxis);\r\n        }\r\n        /* Y axis */\r\n        if (svg.select('.y-axis').empty()) {\r\n          svg.append('g').call(yAxis, yScale);\r\n        } else {\r\n          svg.select('.y-axis').transition(t).call(yAxis, yScale);\r\n        }\r\n        // ^This block of code should be written in a more d3 way following the\r\n        //  General Update Pattern. Can't find of a way to do that within React.\r\n\r\n        /* Path dots */\r\n        svg\r\n          .selectAll('.dot')\r\n          .data(ts, (d) => d.date)\r\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\r\n          .attr('class', 'dot')\r\n          .attr('fill', color)\r\n          .attr('stroke', color)\r\n          .attr('r', 2)\r\n          .transition(t)\r\n          .attr('cx', (d) => xScale(d.date))\r\n          .attr('cy', (d) => yScale(d[type]));\r\n\r\n        focus[i]\r\n          .transition(t)\r\n          .attr('cx', (d) => xScale(d.date))\r\n          .attr('cy', (d) => yScale(d[type]));\r\n\r\n        if (plotTotal) {\r\n          /* TOTAL TRENDS */\r\n          svg.selectAll('.stem').remove();\r\n          const path = svg\r\n            .selectAll('.trend')\r\n            .data([[...ts].reverse()])\r\n            .join('path')\r\n            .attr('class', 'trend')\r\n            .attr('fill', 'none')\r\n            .attr('stroke', color + '99')\r\n            .attr('stroke-width', 4);\r\n          // HACK\r\n          // Path interpolation is non-trivial. Ideally, a custom path tween\r\n          // function should be defined which takes care that old path dots\r\n          // transition synchronously along with the path transition. This hack\r\n          // simulates that behaviour.\r\n          if (path.attr('d')) {\r\n            const n = path.node().getTotalLength();\r\n            const p = path.node().getPointAtLength(n);\r\n            // Append points at end of path for better interpolation\r\n            path.attr(\r\n              'd',\r\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\r\n            );\r\n          }\r\n          path\r\n            .transition(t)\r\n            .attr('opacity', plotTotal ? 1 : 0)\r\n            .attr(\r\n              'd',\r\n              d3\r\n                .line()\r\n                .x((d) => xScale(d.date))\r\n                .y((d) => yScale(d[typeTotal]))\r\n                .curve(d3.curveMonotoneX)\r\n            );\r\n          // Using d3-interpolate-path\r\n          // .attrTween('d', function (d) {\r\n          //   var previous = path.attr('d');\r\n          //   var current = line(d);\r\n          //   return interpolatePath(previous, current);\r\n          // });\r\n        } else {\r\n          /* DAILY TRENDS */\r\n          svg.selectAll('.trend').remove();\r\n          svg\r\n            .selectAll('.stem')\r\n            .data(ts, (d) => d.date)\r\n            .join((enter) =>\r\n              enter\r\n                .append('line')\r\n                .attr('x1', (d) => xScale(d.date))\r\n                .attr('x2', (d) => xScale(d.date))\r\n                .attr('y2', chartBottom)\r\n            )\r\n            .attr('class', 'stem')\r\n            .style('stroke', color + '99')\r\n            .style('stroke-width', 4)\r\n            .attr('y1', chartBottom)\r\n            .transition(t)\r\n            .attr('x1', (d) => xScale(d.date))\r\n            .attr('x2', (d) => xScale(d.date))\r\n            .attr('y2', (d) => yScale(d[typeDaily]));\r\n        }\r\n\r\n        svg\r\n          .on('mousemove', mousemove)\r\n          .on('touchmove', mousemove)\r\n          .on('mouseout', mouseout)\r\n          .on('touchend', mouseout);\r\n      });\r\n    },\r\n    [dimensions, chartType, logMode, mode]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (timeseries.length > 1) {\r\n      graphData(timeseries);\r\n    }\r\n  }, [timeseries, graphData]);\r\n\r\n  const focusDate = moment(datapoint.date);\r\n  let dateStr = focusDate.format('DD MMMM');\r\n  dateStr += focusDate.isSame(moment().subtract(1, 'days'), 'day')\r\n    ? ' Yesterday'\r\n    : '';\r\n\r\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\r\n  const chartKey2 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\r\n  const chartKey3 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\r\n\r\n  // Function for calculate increased/decreased count for each type of data\r\n  const currentStatusCount = (chartType) => {\r\n    if (timeseries.length <= 0 || index === 0) return '';\r\n    const currentDiff =\r\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\r\n    const formatedDiff = formatNumber(currentDiff);\r\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"TimeSeries-Parent fadeInUp\"\r\n      style={{animationDelay: '2.7s'}}\r\n    >\r\n      <div className=\"timeseries\">\r\n        <div className=\"svg-parent\" ref={wrapperRef}>\r\n          <div className=\"stats\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\r\n              <h6>{currentStatusCount(chartKey1)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\" />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\r\n              <h6>{currentStatusCount(chartKey2)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\" />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\r\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\r\n              <h6>{currentStatusCount(chartKey3)}</h6>\r\n            </div>\r\n          </div>\r\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pills\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(Infinity)}\r\n          className={lastDaysCount === Infinity ? 'selected' : ''}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(30)}\r\n          className={lastDaysCount === 30 ? 'selected' : ''}\r\n          aria-label=\"1 month\"\r\n        >\r\n          1M\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setLastDaysCount(14)}\r\n          className={lastDaysCount === 14 ? 'selected' : ''}\r\n          aria-label=\"14 days\"\r\n        >\r\n          14D\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeSeries;\r\n","import {useState, useEffect} from 'react';\r\nimport {ResizeObserver} from '@juggle/resize-observer';\r\n\r\nexport const useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries, observer) => {\r\n      entries.forEach((entry, index) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction Minigraph({timeseries}) {\r\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\r\n  const graphElement1 = useRef(null);\r\n  const graphElement2 = useRef(null);\r\n  const graphElement3 = useRef(null);\r\n  const graphElement4 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\r\n  }, [timeseries]);\r\n\r\n  const graphData = useCallback(\r\n    (data) => {\r\n      if (data.length <= 1) return 0;\r\n\r\n      const margin = {top: 30, right: 10, bottom: 30, left: 0};\r\n      const width = 100 - margin.left - margin.right;\r\n      const height = 100 - margin.top - margin.bottom;\r\n\r\n      const svg1 = d3.select(graphElement1.current);\r\n      const svg2 = d3.select(graphElement2.current);\r\n      const svg3 = d3.select(graphElement3.current);\r\n      const svg4 = d3.select(graphElement4.current);\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain(d3.extent(data, (d) => d.date))\r\n        .range([0, width]);\r\n\r\n      const y1 = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(data, (d) => d.dailyconfirmed)])\r\n        .range([height, 0]);\r\n\r\n      const path1 = svg1\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#ff073a99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x((d) => x(d.date))\r\n            .y((d) => y1(d.dailyconfirmed))\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength1 = path1.node().getTotalLength();\r\n      path1\r\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\r\n        .attr('stroke-dashoffset', totalLength1)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg1\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#ff073a')\r\n        .attr('stroke', '#ff073a')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', (d) => x(d.date))\r\n        .attr('cy', (d) => y1(d.dailyconfirmed))\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .style('opacity', 1);\r\n\r\n      const path2 = svg2\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#007bff99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x((d) => x(d.date))\r\n            .y((d) => y1(d.dailyconfirmed - d.dailyrecovered - d.dailydeceased))\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength2 = path2.node().getTotalLength();\r\n      path2\r\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\r\n        .attr('stroke-dashoffset', totalLength2)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg2\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#007bff')\r\n        .attr('stroke', '#007bff')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', (d) => x(d.date))\r\n        .attr('cy', (d) =>\r\n          y1(d.dailyconfirmed - d.dailyrecovered - d.dailydeceased)\r\n        )\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .style('opacity', 1);\r\n\r\n      const path3 = svg3\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#28a74599')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x((d) => x(d.date))\r\n            .y((d) => y1(d.dailyrecovered))\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength3 = path1.node().getTotalLength();\r\n      path3\r\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\r\n        .attr('stroke-dashoffset', totalLength3)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg3\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#28a745')\r\n        .attr('stroke', '#28a745')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', (d) => x(d.date))\r\n        .attr('cy', (d) => y1(d.dailyrecovered))\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .style('opacity', 1);\r\n\r\n      const path4 = svg4\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#6c757d99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x((d) => x(d.date))\r\n            .y((d) => y1(d.dailydeceased))\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength4 = path4.node().getTotalLength();\r\n      path4\r\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\r\n        .attr('stroke-dashoffset', totalLength4)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg4\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#6c757d')\r\n        .attr('stroke', '#6c757d')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', (d) => x(d.date))\r\n        .attr('cy', (d) => y1(d.dailydeceased))\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .delay(500)\r\n        .duration(2500)\r\n        .style('opacity', 1);\r\n    },\r\n    [\r\n      /* comment can be removed anytime - just kept for reducing the diff */\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    graphData(timeSeriesData);\r\n  }, [timeSeriesData, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\r\n        <svg\r\n          ref={graphElement1}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{animationDelay: '1.5s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement2}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-green fadeInUp\"\r\n        style={{animationDelay: '1.6s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement3}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-gray fadeInUp\"\r\n        style={{animationDelay: '1.7s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement4}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Minigraph;\r\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport {\r\n  formatDate,\r\n  formatDateAbsolute,\r\n  preprocessTimeseries,\r\n  parseStateTimeseries,\r\n} from '../utils/common-functions';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Table from './table';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport TimeSeries from './timeseries';\r\nimport Minigraph from './minigraph';\r\n\r\nfunction Home(props) {\r\n  const [states, setStates] = useState([]);\r\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\r\n  const [stateTestData, setStateTestData] = useState({});\r\n  const [fetched, setFetched] = useState(false);\r\n  const [graphOption, setGraphOption] = useState(1);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n  const [timeseries, setTimeseries] = useState({});\r\n  const [activeStateCode, setActiveStateCode] = useState('TT'); // TT -> India\r\n  const [activityLog, setActivityLog] = useState([]);\r\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\r\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\r\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n        stateDistrictWiseResponse,\r\n        {data: statesDailyResponse},\r\n        updateLogResponse,\r\n        stateTestResponse,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n        axios.get('https://api.covid19india.org/states_daily.json'),\r\n        axios.get('https://api.covid19india.org/updatelog/log.json'),\r\n        axios.get('https://api.covid19india.org/state_test_data.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      const ts = parseStateTimeseries(statesDailyResponse);\r\n      ts['TT'] = preprocessTimeseries(response.data.cases_time_series); // TT -> India\r\n      setTimeseries(ts);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setStateTestData(stateTestResponse.data.states_tested_data.reverse());\r\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\r\n      setActivityLog(updateLogResponse.data);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onHighlightState = (state, index) => {\r\n    if (!state && !index) return setRegionHighlighted(null);\r\n    setRegionHighlighted({state, index});\r\n  };\r\n  const onHighlightDistrict = (district, state, index) => {\r\n    if (!state && !index && !district) return setRegionHighlighted(null);\r\n    setRegionHighlighted({district, state, index});\r\n  };\r\n\r\n  const onMapHighlightChange = useCallback(({statecode}) => {\r\n    setActiveStateCode(statecode);\r\n  }, []);\r\n\r\n  const refs = [useRef(), useRef(), useRef()];\r\n  // const scrollHandlers = refs.map((ref) => () =>\r\n  //   window.scrollTo({\r\n  //     top: ref.current.offsetTop,\r\n  //     behavior: 'smooth',\r\n  //   })\r\n  // );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"Home\">\r\n        <div className=\"home-left\">\r\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\r\n            <div className=\"header-mid\">\r\n              <div className=\"titles\">\r\n                <h1>India COVID-19 Tracker</h1>\r\n                <h6 style={{fontWeight: 600}}>A Crowdsourced Initiative</h6>\r\n              </div>\r\n              <div className=\"last-update\">\r\n                <h6>Last Updated</h6>\r\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\r\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                </h6>\r\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\r\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                </h6>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {states.length > 1 && <Level data={states} />}\r\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\r\n          {fetched && (\r\n            <Table\r\n              forwardRef={refs[0]}\r\n              states={states}\r\n              summary={false}\r\n              stateDistrictWiseData={stateDistrictWiseData}\r\n              onHighlightState={onHighlightState}\r\n              onHighlightDistrict={onHighlightDistrict}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"home-right\">\r\n          {fetched && (\r\n            <React.Fragment>\r\n              <MapExplorer\r\n                forwardRef={refs[1]}\r\n                states={states}\r\n                stateDistrictWiseData={stateDistrictWiseData}\r\n                stateTestData={stateTestData}\r\n                regionHighlighted={regionHighlighted}\r\n                onMapHighlightChange={onMapHighlightChange}\r\n              />\r\n\r\n              <div\r\n                className=\"timeseries-header fadeInUp\"\r\n                style={{animationDelay: '2.5s'}}\r\n                ref={refs[2]}\r\n              >\r\n                <h1>Spread Trends</h1>\r\n                <div className=\"tabs\">\r\n                  <div\r\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\r\n                    onClick={() => {\r\n                      setGraphOption(1);\r\n                    }}\r\n                  >\r\n                    <h4>Cumulative</h4>\r\n                  </div>\r\n                  <div\r\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\r\n                    onClick={() => {\r\n                      setGraphOption(2);\r\n                    }}\r\n                  >\r\n                    <h4>Daily</h4>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"scale-modes\">\r\n                  <label>Scale Modes</label>\r\n                  <div className=\"timeseries-mode\">\r\n                    <label htmlFor=\"timeseries-mode\">Uniform</label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={timeseriesMode}\r\n                      className=\"switch\"\r\n                      aria-label=\"Checked by default to scale uniformly.\"\r\n                      onChange={(event) => {\r\n                        setTimeseriesMode(!timeseriesMode);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={`timeseries-logmode ${\r\n                      graphOption !== 1 ? 'disabled' : ''\r\n                    }`}\r\n                  >\r\n                    <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={graphOption === 1 && timeseriesLogMode}\r\n                      className=\"switch\"\r\n                      disabled={graphOption !== 1}\r\n                      onChange={(event) => {\r\n                        setTimeseriesLogMode(!timeseriesLogMode);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"trends-state-name\">\r\n                  <select\r\n                    onChange={({target}) => {\r\n                      onHighlightState(JSON.parse(target.value));\r\n                    }}\r\n                  >\r\n                    {states.map((s) => {\r\n                      return (\r\n                        <option\r\n                          key={s.statecode}\r\n                          value={JSON.stringify(s)}\r\n                          selected={s.statecode === activeStateCode}\r\n                        >\r\n                          {s.state === 'Total' ? 'All States' : s.state}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <TimeSeries\r\n                timeseries={timeseries[activeStateCode]}\r\n                type={graphOption}\r\n                mode={timeseriesMode}\r\n                logMode={timeseriesLogMode}\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n\r\n        {/* <div className=\"floating-buttons\">\r\n          <button\r\n            className=\"table-nav fadeInUp\"\r\n            onClick={scrollHandlers[0]}\r\n            style={{animationDelay: '2.2s'}}\r\n          >\r\n            <Icon.Grid />\r\n          </button>\r\n          <button\r\n            className=\"map-nav fadeInUp\"\r\n            onClick={scrollHandlers[1]}\r\n            style={{animationDelay: '2.1s'}}\r\n          >\r\n            <Icon.MapPin />\r\n          </button>\r\n          <button\r\n            className=\"trends-nav fadeInUp\"\r\n            onClick={scrollHandlers[2]}\r\n            style={{animationDelay: '2s'}}\r\n          >\r\n            <Icon.TrendingUp />\r\n          </button>\r\n        </div> */}\r\n\r\n        {/* <div className=\"home-left\">\r\n        {patients.length > 1 && (\r\n          <div className=\"patients-summary\">\r\n            <h1>Recent Cases</h1>\r\n            <h6>A summary of the latest reported cases</h6>\r\n            <div className=\"legend\">\r\n              <div className=\"legend-left\">\r\n                <div className=\"circle is-female\"></div>\r\n                <h5 className=\"is-female\">Female</h5>\r\n                <div className=\"circle is-male\"></div>\r\n                <h5 className=\"is-male\">Male</h5>\r\n                <div className=\"circle\"></div>\r\n                <h5 className=\"\">Unknown</h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"patients-summary-wrapper\">\r\n              <Patients\r\n                patients={patients}\r\n                summary={true}\r\n                colorMode={'genders'}\r\n                expand={true}\r\n              />\r\n            </div>\r\n            <button className=\"button\">\r\n              <Link to=\"/database\">\r\n                <Icon.Database />\r\n                <span>View the Patients Database</span>\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"home-right\"></div>\r\n    */}\r\n      </div>\r\n\r\n      <div className=\"Home\">\r\n        <div className=\"home-left\">\r\n          <div\r\n            className=\"updates-header fadeInUp\"\r\n            style={{animationDelay: '1.5s'}}\r\n          >\r\n            <h1>Updates</h1>\r\n            <h2>{format(new Date(), 'd MMM')}</h2>\r\n          </div>\r\n\r\n          <div className=\"updates fadeInUp\" style={{animationDelay: '1.7s'}}>\r\n            {activityLog\r\n              .slice(-5)\r\n              .reverse()\r\n              .map(function (activity, index) {\r\n                activity.update = activity.update.replace(/\\n/g, '<br/>');\r\n                return (\r\n                  <div key={index} className=\"update\">\r\n                    <h5>\r\n                      {formatDistance(\r\n                        new Date(activity.timestamp * 1000),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </h5>\r\n                    <h4\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: activity.update,\r\n                      }}\r\n                    ></h4>\r\n                  </div>\r\n                );\r\n              })}\r\n            <button className=\"button\">\r\n              <Link to=\"/demographics\">\r\n                <Icon.Database />\r\n                <span>Demographic Overview</span>\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"home-right\"></div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  // HTML Properties for each of the links in UI\r\n  const navLinkProps = (path, animationDelay) => ({\r\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\r\n    style: {\r\n      animationDelay: `${animationDelay}s`,\r\n    },\r\n  });\r\n\r\n  if (window.location.pathname !== '/summary') {\r\n    return (\r\n      <div\r\n        className=\"Navbar\"\r\n        style={{\r\n          animationDelay: '0.5s',\r\n          transition: 'all 0.3s ease-in-out',\r\n        }}\r\n      >\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"fadeInUp logo\"\r\n            alt=\"India COVID-19 Tracker\"\r\n            src=\"/icon.png\"\r\n            style={{\r\n              animationDelay: '0.0s',\r\n              transition: 'all 0.3s ease-in-out',\r\n            }}\r\n          />\r\n        </Link>\r\n\r\n        <div className=\"navbar-left\">\r\n          <div className={`navbar-menu ${!menuVisible ? 'hidden' : ''}`}>\r\n            {props.pages.map((page, i) => {\r\n              return (\r\n                <Link\r\n                  onClick={() => setMenuVisible(false)}\r\n                  to={page.pageLink}\r\n                  key={i}\r\n                >\r\n                  <span\r\n                    {...navLinkProps(\r\n                      page.pageLink,\r\n                      page.animationDelayForNavbar\r\n                    )}\r\n                  >\r\n                    {page.displayName}\r\n                  </span>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"navbar-right\">\r\n          <div\r\n            className=\"navbar-toggle\"\r\n            onClick={() => {\r\n              setMenuVisible(!menuVisible);\r\n            }}\r\n          >\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nfunction Links(props) {\r\n  return (\r\n    <div className=\"Links\">\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\r\n        <h3>HELPLINE NUMBERS [by State]</h3>\r\n        <a\r\n          href=\"https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\r\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\r\n        <a\r\n          href=\"https://www.mohfw.gov.in/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          https://www.mohfw.gov.in/\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\r\n        <h3>WHO : COVID-19 Home Page</h3>\r\n        <a\r\n          href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\r\n        <h3>CDC</h3>\r\n        <a\r\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\r\n        <h3>Crowdsourced list of Resources & Essentials from across India</h3>\r\n        <a\r\n          href=\"https://bit.ly/covid19resourcelist\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          https://bit.ly/covid19resourcelist\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"link fadeInUp\" style={{animationDelay: '0.7s'}}>\r\n        <h3>COVID-19 Global Tracker</h3>\r\n        <a\r\n          href=\"https://coronavirus.thebaselab.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          https://coronavirus.thebaselab.com/\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FAQ(props) {\r\n  const [faq, setFaq] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFAQs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const getFAQs = () => {\r\n    axios\r\n      .get('https://api.covid19india.org/website_data.json')\r\n      .then((response) => {\r\n        setFaq(response.data['faq']);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"FAQ\">\r\n      {faq.map((faq, index) => {\r\n        return (\r\n          <div\r\n            key={index}\r\n            className=\"faq fadeInUp\"\r\n            style={{animationDelay: `${0.5 + index * 0.1}s`}}\r\n          >\r\n            <h2 className=\"question\">{faq.question}</h2>\r\n            <h2\r\n              className=\"answer\"\r\n              dangerouslySetInnerHTML={{__html: faq.answer}}\r\n            ></h2>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FAQ;\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Banner(props) {\r\n  const [snippets, setSnippets] = useState([]);\r\n  const [snippet, setSnippet] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/website_data.json')\r\n      .then((response) => {\r\n        setSnippets(response.data.factoids || []);\r\n        setSnippet(\r\n          response.data.factoids[\r\n            Math.floor(\r\n              Math.random() * (response.data.factoids.length - 1 - 0) + 0\r\n            )\r\n          ] || ''\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const snippetChooser = useCallback(\r\n    (min, max) => {\r\n      const index = Math.random() * (max - min) + min;\r\n      setSnippet(snippets[Math.floor(index)]);\r\n    },\r\n    [snippets]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      snippetChooser(0, snippets.length - 1);\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [snippetChooser, snippets]);\r\n\r\n  if (window.location.pathname !== '/database') {\r\n    return (\r\n      <div\r\n        onClick={() => snippetChooser(0, snippets.length - 1)}\r\n        className=\"Banner fadeInUp\"\r\n        style={{animationDelay: '0.8s'}}\r\n      >\r\n        <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport {format} from 'date-fns';\r\n\r\nfunction PatientsView(props) {\r\n  const logs = props.logs;\r\n\r\n  return (\r\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\r\n      {Object.keys(logs)\r\n        .slice(props.summary ? -1 : 0)\r\n        .map((day, index) => {\r\n          if (day !== 'Invalid Date') {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <h5 className=\"daylabel\">\r\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\r\n                  {'(' + logs[day].length + ')'}\r\n                </h5>\r\n                <div\r\n                  key={index}\r\n                  className={`day ${props.summary ? 'summary' : ''}`}\r\n                >\r\n                  {logs[day]\r\n                    .slice(props.summary ? -40 : 0)\r\n                    .map((patient, indexTwo) => {\r\n                      return (\r\n                        <div\r\n                          key={indexTwo}\r\n                          className={props.applyClass(patient)}\r\n                          onClick={() => {\r\n                            props.setModal(true);\r\n                            props.setPatient(patient);\r\n                          }}\r\n                        >\r\n                          <h3>\r\n                            {props.expand ? `P${patient.patientnumber}` : ''}\r\n                          </h3>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientsView;\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {parse} from 'date-fns';\r\nimport * as Icon from 'react-feather';\r\nimport PatientsView from './patientsview';\r\n\r\nfunction Patients(props) {\r\n  const [patients, setPatients] = useState(props.patients);\r\n  const [patient, setPatient] = useState(props.patients.slice(-1));\r\n  const [logs, setLogs] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n\r\n  // When the user clicks anywhere outside of the modal, close modal\r\n  window.onclick = function (event) {\r\n    const modal = document.getElementById('modal');\r\n    if (event.target === modal) {\r\n      setModal(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPatients(props.patients);\r\n  }, [props.patients]);\r\n\r\n  useEffect(() => {\r\n    if (modal) document.body.classList.add('modal-open');\r\n    else document.body.classList.remove('modal-open'); // to remove modal-open class from body\r\n  }, [modal]);\r\n\r\n  const parseByDate = useCallback((patients) => {\r\n    const log = {};\r\n    for (let i = 0; i < patients.length; i++) {\r\n      const day = new Date(\r\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\r\n      );\r\n      if (!(day in log)) {\r\n        const list = [];\r\n        list.push(patients[i]);\r\n        log[day] = list;\r\n      } else {\r\n        const list = log[day];\r\n        list.push(patients[i]);\r\n        log[day] = list;\r\n      }\r\n    }\r\n    setLogs(log);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (patients.length) {\r\n      parseByDate(patients);\r\n    }\r\n  }, [parseByDate, patients]);\r\n\r\n  const switchPatient = (patientIndexArg) => {\r\n    if (patientIndexArg === '') return;\r\n    try {\r\n      const patientIndex = patientIndexArg.slice(1);\r\n      // eslint-disable-next-line\r\n      patients.map((patient, index) => {\r\n        if (patient.patientnumber === patientIndex) setPatient(patient);\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getClassNameFn = (colorMode) => {\r\n    switch (colorMode) {\r\n      case 'genders':\r\n        return (patient) => {\r\n          return `patient-card ${\r\n            patient.gender === 'F'\r\n              ? 'is-femme'\r\n              : patient.gender === 'M'\r\n              ? 'is-male'\r\n              : ''\r\n          } ${props.expand ? '' : 'is-small'}`;\r\n        };\r\n      case 'transmission':\r\n        return (patient) => {\r\n          return `patient-card ${\r\n            patient.typeoftransmission === 'Local'\r\n              ? 'is-local'\r\n              : patient.typeoftransmission === 'Imported'\r\n              ? 'is-imported'\r\n              : ''\r\n          } ${props.expand ? '' : 'is-small'}`;\r\n        };\r\n      case 'nationality':\r\n        return (patient) => {\r\n          return `patient-card ${\r\n            patient.nationality === 'India'\r\n              ? 'is-in'\r\n              : patient.nationality === 'Myanmar'\r\n              ? 'is-mm'\r\n              : patient.nationality === 'Indonesia'\r\n              ? 'is-id'\r\n              : patient.nationality === 'United Kingdom'\r\n              ? 'is-uk'\r\n              : patient.nationality === 'United States of America'\r\n              ? 'is-us'\r\n              : patient.nationality === 'Thailand'\r\n              ? 'is-th'\r\n              : patient.nationality === 'Phillipines'\r\n              ? 'is-ph'\r\n              : patient.nationality === 'Italy'\r\n              ? 'is-it'\r\n              : patient.nationality === 'Canada'\r\n              ? 'is-ca'\r\n              : ''\r\n          } ${props.expand ? '' : 'is-small'}`;\r\n        };\r\n      case 'age':\r\n        return (patient) => {\r\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\r\n        };\r\n      default:\r\n        return (patient) => {\r\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PatientsView\r\n        logs={logs}\r\n        setModal={setModal}\r\n        setPatient={setPatient}\r\n        expand={props.expand}\r\n        applyClass={getClassNameFn(props.colorMode)}\r\n      />\r\n\r\n      {modal && (\r\n        <div className=\"modal\" id=\"modal\">\r\n          <div\r\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\r\n          >\r\n            <div className=\"close-button\">\r\n              <Icon.XCircle\r\n                onClick={() => {\r\n                  setModal(false);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"modal-top\">\r\n              <h1>#{patient.patientnumber}</h1>\r\n            </div>\r\n\r\n            <div className=\"meta\">\r\n              <h5>Date Announced</h5>\r\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\r\n\r\n              <h5>Contracted from</h5>\r\n              <h3\r\n                className=\"contracted-from\"\r\n                onClick={() => {\r\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\r\n                }}\r\n              >\r\n                {patient.contractedfromwhichpatientsuspected\r\n                  ? patient.contractedfromwhichpatientsuspected\r\n                  : '?'}\r\n              </h3>\r\n\r\n              <h5>Detected City</h5>\r\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\r\n\r\n              <h5>Detected District</h5>\r\n              <h3>\r\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\r\n              </h3>\r\n\r\n              <h5>Detected State</h5>\r\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\r\n\r\n              <h5>Nationality</h5>\r\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\r\n\r\n              <h5>Age</h5>\r\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\r\n\r\n              <h5>Gender</h5>\r\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\r\n\r\n              <h5>State Patient Number</h5>\r\n              <h3>\r\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\r\n              </h3>\r\n\r\n              <h5>Type of transmission</h5>\r\n              <h3>\r\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"notes\">\r\n              <h5>Notes</h5>\r\n              <h3>{patient.notes}</h3>\r\n            </div>\r\n\r\n            <h5>Source 1</h5>\r\n            <div className=\"link\">\r\n              <a href={patient.source1} target=\"_noblank\">\r\n                {patient.source1}\r\n              </a>\r\n            </div>\r\n\r\n            <h5>Source 2</h5>\r\n            <div className=\"link\">\r\n              <a href={patient.source2} target=\"_noblank\">\r\n                {patient.source2}\r\n              </a>\r\n            </div>\r\n\r\n            <h5>Source 3</h5>\r\n            <div className=\"link\">\r\n              <a href={patient.source3} target=\"_noblank\">\r\n                {patient.source3}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n","import React from 'react';\r\nimport {Parser} from 'json2csv';\r\nimport * as Icon from 'react-feather';\r\n\r\nfunction CSVDownloadLink(props) {\r\n  if (!props.patients) {\r\n    return '';\r\n  }\r\n  try {\r\n    const parser = new Parser(Object.keys(props.patients[0]));\r\n    const csv = parser.parse(props.patients);\r\n    const data = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\r\n    return (\r\n      <a href={data} download=\"patients.csv\">\r\n        <code>CSV</code>\r\n      </a>\r\n    );\r\n  } catch (e) {\r\n    console.log(e);\r\n    return (\r\n      <a href=\"/\">\r\n        <code>CSV</code>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nfunction DownloadBlock(props) {\r\n  if (!props.patients) {\r\n    return '';\r\n  }\r\n\r\n  const dataJSON =\r\n    'data:text/json;charset=utf-8,' +\r\n    encodeURIComponent(JSON.stringify(props.patients));\r\n\r\n  return (\r\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\r\n      <button className=\"button\">\r\n        <Icon.Download />\r\n        <CSVDownloadLink patients={props.patients} />\r\n      </button>\r\n      <button className=\"button\">\r\n        <Icon.Download />\r\n        <a href={dataJSON} download=\"patients.json\">\r\n          JSON\r\n        </a>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DownloadBlock;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {format, parse, subDays} from 'date-fns';\r\n\r\nimport Patients from './patients';\r\nimport DownloadBlock from './downloadblock';\r\n\r\nfunction filterByObject(obj, filters) {\r\n  const keys = Object.keys(filters);\r\n  return obj.filter((p) => {\r\n    return keys.every((key) => {\r\n      if (!filters[key].length) return true;\r\n      return p[key] === filters[key];\r\n    });\r\n  });\r\n}\r\n\r\nfunction PatientDB(props) {\r\n  const [fetched, setFetched] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [filteredPatients, setFilteredPatients] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const {pathname} = useLocation();\r\n  const [colorMode, setColorMode] = useState('genders');\r\n  const [scaleMode, setScaleMode] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    detectedstate: '',\r\n    detecteddistrict: '',\r\n    detectedcity: '',\r\n    dateannounced: format(subDays(new Date(), 1), 'dd/MM/yyyy'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    async function fetchRawData() {\r\n      const response = await axios.get(\r\n        'https://api.covid19india.org/raw_data.json'\r\n      );\r\n      if (response.data) {\r\n        setPatients(response.data.raw_data.reverse());\r\n        setFetched(true);\r\n      } else {\r\n        setError(\"Couldn't fetch patient data. Try again after sometime.\");\r\n        console.log(response);\r\n      }\r\n    }\r\n\r\n    if (!fetched) {\r\n      fetchRawData();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const handleFilters = (label, value) => {\r\n    setFilters((f) => {\r\n      // Create new object (deep copy)\r\n      const newFilters = {...f};\r\n      newFilters[label] = value;\r\n      if (label === 'detectedstate') {\r\n        const district = document.getElementById('district');\r\n        const city = document.getElementById('city');\r\n        // Hide boxes\r\n        if (value === '') district.style.display = 'none';\r\n        else district.style.display = 'inline';\r\n        city.style.display = 'none';\r\n        // Default to empty selection\r\n        district.selectedIndex = 0;\r\n        city.selectedIndex = 0;\r\n        newFilters['detecteddistrict'] = '';\r\n        newFilters['detectedcity'] = '';\r\n      } else if (label === 'detecteddistrict') {\r\n        const city = document.getElementById('city');\r\n        // Hide box\r\n        if (value === '') city.style.display = 'none';\r\n        else city.style.display = 'inline';\r\n        // Default to empty selection\r\n        city.selectedIndex = 0;\r\n        newFilters['detectedcity'] = '';\r\n      }\r\n      return newFilters;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredPatients(filterByObject(patients, filters));\r\n  }, [patients, filters]);\r\n\r\n  function getSortedValues(obj, key) {\r\n    const setValues = new Set(obj.map((p) => p[key]));\r\n    if (setValues.size > 1) setValues.add('');\r\n    if (key === 'dateannounced') return Array.from(setValues);\r\n    return Array.from(setValues).sort();\r\n  }\r\n\r\n  return (\r\n    <div className=\"PatientsDB\">\r\n      {error ? <div className=\"alert alert-danger\">{error}</div> : ''}\r\n\r\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.5s'}}>\r\n        <div className=\"filters-left\">\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.3s'}}\r\n              id=\"state\"\r\n              onChange={(event) => {\r\n                handleFilters('detectedstate', event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Select State\r\n              </option>\r\n              {getSortedValues(patients, 'detectedstate').map(\r\n                (state, index) => {\r\n                  return (\r\n                    <option key={index} value={state}>\r\n                      {state === '' ? 'All' : state}\r\n                    </option>\r\n                  );\r\n                }\r\n              )}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s', display: 'none'}}\r\n              id=\"district\"\r\n              onChange={(event) => {\r\n                handleFilters('detecteddistrict', event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Select District\r\n              </option>\r\n              {getSortedValues(\r\n                filterByObject(patients, {\r\n                  detectedstate: filters.detectedstate,\r\n                }),\r\n                'detecteddistrict'\r\n              ).map((district, index) => {\r\n                return (\r\n                  <option key={index} value={district}>\r\n                    {district === '' ? 'All' : district}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s', display: 'none'}}\r\n              id=\"city\"\r\n              onChange={(event) => {\r\n                handleFilters('detectedcity', event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Select City\r\n              </option>\r\n              {getSortedValues(\r\n                filterByObject(patients, {\r\n                  detectedstate: filters.detectedstate,\r\n                  detecteddistrict: filters.detecteddistrict,\r\n                }),\r\n                'detectedcity'\r\n              ).map((city, index) => {\r\n                return (\r\n                  <option key={index} value={city}>\r\n                    {city === '' ? 'All' : city}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s', display: 'none'}}\r\n              id=\"city\"\r\n              onChange={(event) => {\r\n                handleFilters('detectedcity', event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Select City\r\n              </option>\r\n              {getSortedValues(\r\n                filterByObject(patients, {\r\n                  detectedstate: filters.detectedstate,\r\n                  detecteddistrict: filters.detecteddistrict,\r\n                }),\r\n                'detectedcity'\r\n              ).map((city, index) => {\r\n                return (\r\n                  <option key={index} value={city}>\r\n                    {city === '' ? 'All' : city}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s'}}\r\n              id=\"district\"\r\n              onChange={(event) => {\r\n                handleFilters('dateannounced', event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Select Day\r\n              </option>\r\n              {getSortedValues(\r\n                filterByObject(patients, {\r\n                  detectedstate: filters.detectedstate,\r\n                }),\r\n                'dateannounced'\r\n              ).map((date, index) => {\r\n                return (\r\n                  <option key={index} value={date}>\r\n                    {date === ''\r\n                      ? 'All'\r\n                      : format(\r\n                          parse(date, 'dd/MM/yyyy', new Date()),\r\n                          'dd MMM, yyyy'\r\n                        )}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          {/* <div className=\"select\">\r\n            <select\r\n              style={{animationDelay: '0.4s'}}\r\n              onChange={(event) => {\r\n                handleFilters('dateannounced', event.target.value);\r\n              }}\r\n            >\r\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\r\n                (date, index) => {\r\n                  return (\r\n                    <option key={index} value={date}>\r\n                      {date}\r\n                    </option>\r\n                  );\r\n                }\r\n              )}\r\n            </select>\r\n          </div>*/}\r\n        </div>\r\n\r\n        <div className=\"legend\">\r\n          {colorMode === 'genders' && (\r\n            <div className=\"legend-left\">\r\n              <div className=\"circle is-female\"></div>\r\n              <h5 className=\"is-female\">Female</h5>\r\n              <div className=\"circle is-male\"></div>\r\n              <h5 className=\"is-male\">Male</h5>\r\n              <div className=\"circle\"></div>\r\n              <h5 className=\"\">Unknown</h5>\r\n            </div>\r\n          )}\r\n\r\n          {colorMode === 'transmission' && (\r\n            <div className=\"legend-left\">\r\n              <div className=\"circle is-local\"></div>\r\n              <h5 className=\"is-local\">Local</h5>\r\n              <div className=\"circle is-imported\"></div>\r\n              <h5 className=\"is-imported\">Imported</h5>\r\n              <div className=\"circle\"></div>\r\n              <h5 className=\"\">TBD</h5>\r\n            </div>\r\n          )}\r\n\r\n          {colorMode === 'nationality' && (\r\n            <div className=\"legend-left nationality\">\r\n              <div className=\"circle is-in\"></div>\r\n              <h5 className=\"is-in\">In</h5>\r\n              <div className=\"circle is-uk\"></div>\r\n              <h5 className=\"is-uk\">Uk</h5>\r\n              <div className=\"circle is-us\"></div>\r\n              <h5 className=\"is-us\">Us</h5>\r\n              <div className=\"circle is-th\"></div>\r\n              <h5 className=\"is-thailand\">Th</h5>\r\n              <div className=\"circle is-ph\"></div>\r\n              <h5 className=\"is-ph\">Ph</h5>\r\n              <div className=\"circle is-it\"></div>\r\n              <h5 className=\"is-it\">It</h5>\r\n              <div className=\"circle is-ca\"></div>\r\n              <h5 className=\"is-ca\">Ca</h5>\r\n              <div className=\"circle is-id\"></div>\r\n              <h5 className=\"is-id\">Id</h5>\r\n              <div className=\"circle is-mm\"></div>\r\n              <h5 className=\"is-mm\">Mm</h5>\r\n            </div>\r\n          )}\r\n\r\n          <div className={`select ${colorMode}`}>\r\n            <select\r\n              style={{animationDelay: '0.4s'}}\r\n              onChange={(event) => {\r\n                setColorMode(event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Color modes\r\n              </option>\r\n              <option value=\"genders\">Genders</option>\r\n              <option value=\"transmission\">Transmission</option>\r\n              <option value=\"nationality\">Nationality</option>\r\n              {/* <option value=\"age\">Age</option>*/}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\r\n        <div>\r\n          <h1>Demographics</h1>\r\n          {/* <h3>No. of Patients: {patients.length}</h3>*/}\r\n\r\n          <div className=\"deep-dive\">\r\n            <h5>Expand</h5>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={scaleMode}\r\n              onChange={(event) => {\r\n                setScaleMode(!scaleMode);\r\n              }}\r\n              className=\"switch\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <h6 className=\"disclaimer\">\r\n          Some of the data provided might be missing/unknown as the details have\r\n          not been shared by the state/central governments.\r\n        </h6>\r\n      </div>\r\n\r\n      <div className=\"reminder fadeInUp\" style={{animationDelay: '1s'}}>\r\n        <p>\r\n          It is important that we do not think of these as just tiny boxes,\r\n          numbers, or just another part of statistics - among these are our\r\n          neighbors, our teachers, our healthcare workers, our supermarket\r\n          vendors, our friends, our co-workers, our children or our\r\n          grandparents.\r\n          <br />\r\n          <br />\r\n          Among these are our people.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"patientdb-wrapper\">\r\n        <Patients\r\n          patients={filteredPatients}\r\n          colorMode={colorMode}\r\n          expand={scaleMode}\r\n        />\r\n      </div>\r\n      <DownloadBlock patients={patients} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientDB;\r\n","import React from 'react';\r\nimport {Doughnut, defaults} from 'react-chartjs-2';\r\n\r\nfunction GenderChart(props) {\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'average';\r\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\r\n  defaults.global.tooltips.displayColors = false;\r\n  defaults.global.tooltips.borderColor = '#c62828';\r\n  defaults.global.tooltips.borderWidth = 1;\r\n  defaults.global.tooltips.titleFontColor = '#000';\r\n  defaults.global.tooltips.bodyFontColor = '#000';\r\n  defaults.global.tooltips.caretPadding = 4;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'nearest';\r\n\r\n  defaults.global.legend.display = true;\r\n  defaults.global.legend.position = 'bottom';\r\n\r\n  defaults.global.hover.intersect = false;\r\n\r\n  let male = 0;\r\n  let female = 0;\r\n  let unknown = 0;\r\n\r\n  if (!props.data || props.data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  props.data.forEach((patient) => {\r\n    if (patient.gender === 'M') {\r\n      male++;\r\n    } else if (patient.gender === 'F') {\r\n      female++;\r\n    } else {\r\n      unknown++;\r\n    }\r\n  });\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: [male, female, unknown],\r\n        backgroundColor: ['blue', 'pink', 'grey'],\r\n        label: 'Hola',\r\n      },\r\n    ],\r\n    labels: ['Male', 'Female', 'Awaiting Details'],\r\n  };\r\n\r\n  const chartOptions = {\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: 'point',\r\n      position: 'nearest',\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          const dataset = data.datasets[tooltipItem.datasetIndex];\r\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n          const total = meta.total;\r\n          const currentValue = dataset.data[tooltipItem.index];\r\n          const percentage = parseFloat(\r\n            ((currentValue / total) * 100).toFixed(1)\r\n          );\r\n          return currentValue + ' (' + percentage + '%)';\r\n        },\r\n        title: function (tooltipItem, data) {\r\n          return data.labels[tooltipItem[0].index];\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content doughnut\">\r\n        <Doughnut data={chartData} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenderChart;\r\n","import React from 'react';\r\nimport {Bar, defaults} from 'react-chartjs-2';\r\n\r\nfunction AgeChart(props) {\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'average';\r\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\r\n  defaults.global.tooltips.displayColors = false;\r\n  defaults.global.tooltips.borderColor = '#c62828';\r\n  defaults.global.tooltips.borderWidth = 1;\r\n  defaults.global.tooltips.titleFontColor = '#000';\r\n  defaults.global.tooltips.bodyFontColor = '#000';\r\n  defaults.global.tooltips.caretPadding = 4;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'nearest';\r\n\r\n  defaults.global.legend.display = true;\r\n  defaults.global.legend.position = 'bottom';\r\n\r\n  defaults.global.hover.intersect = false;\r\n\r\n  const ages = Array(10).fill(0);\r\n  let unknown = 0;\r\n  if (!props.data || props.data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  props.data.forEach((patient) => {\r\n    if (patient.agebracket) {\r\n      const age = parseInt(patient.agebracket);\r\n      for (let i = 0; i < 10; i++) {\r\n        if (age > i * 10 && age <= (i + 1) * 10) {\r\n          ages[i]++;\r\n        }\r\n      }\r\n    } else {\r\n      unknown++;\r\n    }\r\n  });\r\n\r\n  const chartData = {\r\n    labels: [\r\n      '0-10',\r\n      '11-20',\r\n      '21-30',\r\n      '31-40',\r\n      '41-50',\r\n      '51-60',\r\n      '61-70',\r\n      '71-80',\r\n      '81-90',\r\n      '91-100',\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: ages,\r\n        label: 'Cases',\r\n        backgroundColor: '#ff073a',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 20,\r\n        bottom: 0,\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n          gridLines: {\r\n            color: 'rgba(0, 0, 0, 0)',\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content doughnut\">\r\n        <Bar data={chartData} options={chartOptions} />\r\n      </div>\r\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AgeChart;\r\n","import React from 'react';\r\nimport {Doughnut, defaults} from 'react-chartjs-2';\r\n\r\nfunction NationalityChart(props) {\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'average';\r\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\r\n  defaults.global.tooltips.displayColors = false;\r\n  defaults.global.tooltips.borderColor = '#c62828';\r\n  defaults.global.tooltips.borderWidth = 1;\r\n  defaults.global.tooltips.titleFontColor = '#000';\r\n  defaults.global.tooltips.bodyFontColor = '#000';\r\n  defaults.global.tooltips.caretPadding = 4;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'nearest';\r\n\r\n  defaults.global.legend.display = true;\r\n  defaults.global.legend.position = 'bottom';\r\n\r\n  defaults.global.hover.intersect = false;\r\n\r\n  if (!props.data || props.data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const nationality = {};\r\n  let unknown = 0;\r\n\r\n  props.data.forEach((patient) => {\r\n    if (!patient.nationality) {\r\n      unknown++;\r\n      return;\r\n    }\r\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\r\n      nationality[patient.nationality.toLowerCase()] = 0;\r\n    }\r\n    nationality[patient.nationality.toLowerCase()]++;\r\n  });\r\n\r\n  // delete nationality.india;\r\n  const data = [];\r\n  const labels = [];\r\n\r\n  Object.keys(nationality).forEach((country) => {\r\n    if (country) {\r\n      labels.push(country.toUpperCase());\r\n      data.push(nationality[country]);\r\n    }\r\n  });\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: data,\r\n        backgroundColor: [\r\n          '#ff7272',\r\n          '#ffb385',\r\n          '#fae7cb',\r\n          '#ffd31d',\r\n          '#00a8cc',\r\n          '#005082',\r\n          '#000839',\r\n          '#ffa41b',\r\n          '#f1e7b6',\r\n          '#400082',\r\n          '#fe346e',\r\n          '#5a3f11',\r\n          '#9c5518',\r\n          '#f67575',\r\n          '#d4f8e8',\r\n          '#1eb2a6',\r\n        ],\r\n      },\r\n    ],\r\n    labels: labels,\r\n  };\r\n\r\n  const chartOptions = {\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: 'point',\r\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          const dataset = data.datasets[tooltipItem.datasetIndex];\r\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n          const total = meta.total;\r\n          const currentValue = dataset.data[tooltipItem.index];\r\n          const percentage = parseFloat(\r\n            ((currentValue / total) * 100).toFixed(1)\r\n          );\r\n          return currentValue + ' (' + percentage + '%)';\r\n        },\r\n        title: function (tooltipItem, data) {\r\n          return data.labels[tooltipItem[0].index];\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content doughnut\">\r\n        <Doughnut data={chartData} options={chartOptions} />\r\n      </div>\r\n      <div className=\"chart-note\">*Awaiting details for {unknown} patients</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NationalityChart;\r\n","import React from 'react';\r\nimport {Line, defaults} from 'react-chartjs-2';\r\nimport moment from 'moment';\r\nimport {getStateName} from '../../utils/common-functions';\r\nfunction AllStatesChart(props) {\r\n  const dates = [];\r\n\r\n  defaults.global.elements.line.fill = false;\r\n\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'average';\r\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\r\n  defaults.global.tooltips.displayColors = false;\r\n  defaults.global.tooltips.borderColor = '#c62828';\r\n  defaults.global.tooltips.borderWidth = 1;\r\n  defaults.global.tooltips.titleFontColor = '#000';\r\n  defaults.global.tooltips.bodyFontColor = '#000';\r\n  defaults.global.tooltips.caretPadding = 4;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'nearest';\r\n\r\n  defaults.global.legend.display = true;\r\n  defaults.global.legend.position = 'bottom';\r\n\r\n  defaults.global.hover.intersect = false;\r\n\r\n  if (!props.data || props.data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const statesData = new Map();\r\n\r\n  props.data.forEach((data, index) => {\r\n    if (data.status !== 'Confirmed') {\r\n      return;\r\n    }\r\n\r\n    Object.keys(data).forEach((key) => {\r\n      if (key === 'date') {\r\n        dates.push(moment(data.date.trim(), 'DD MMM'));\r\n      }\r\n\r\n      if (key === 'status' || key === 'date') {\r\n        return;\r\n      }\r\n\r\n      if (!statesData.has(key)) {\r\n        statesData.set(key, []);\r\n      }\r\n      const previousValue =\r\n        statesData.get(key).length > 0\r\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\r\n          : 0;\r\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\r\n      statesData.get(key).push(previousValue + currentValue);\r\n    });\r\n  });\r\n\r\n  const sortedMap = new Map(\r\n    [...statesData.entries()].sort((a, b) => {\r\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\r\n    })\r\n  );\r\n\r\n  const colors = [\r\n    '#ff073a',\r\n    '#28a745',\r\n    '#342ead',\r\n    '#7D5BA6',\r\n    '#DD7596',\r\n    '#16c8f0',\r\n    '#f67575',\r\n    '#2b580c',\r\n    '#9D44B5',\r\n    '#91132d',\r\n    '#6D9DC5',\r\n    '#2b580c',\r\n    '#6c757d',\r\n    '#f67575',\r\n    '#d4f8e8',\r\n  ];\r\n\r\n  let index = 0;\r\n  const datasets = [];\r\n  sortedMap.forEach((data, key) => {\r\n    if (key === 'tt') {\r\n      return;\r\n    }\r\n\r\n    if (index >= 10) {\r\n      return;\r\n    }\r\n\r\n    datasets.push({\r\n      borderWidth: 1.5,\r\n      data: statesData.get(key),\r\n      borderCapStyle: 'round',\r\n      pointBackgroundColor: colors[index],\r\n      label: getStateName(key),\r\n      borderColor: colors[index],\r\n      pointHoverRadius: 0.5,\r\n    });\r\n\r\n    index++;\r\n  });\r\n\r\n  const dataset = {\r\n    labels: dates,\r\n    datasets: datasets,\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: 'index',\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n      line: {\r\n        tension: 0,\r\n      },\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          ticks: {\r\n            beginAtZero: true,\r\n            max: undefined,\r\n            precision: 0,\r\n          },\r\n          scaleLabel: {\r\n            display: false,\r\n            labelString: 'Total Cases',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          type: 'time',\r\n          time: {\r\n            unit: 'day',\r\n            tooltipFormat: 'MMM DD',\r\n            stepSize: 7,\r\n            displayFormats: {\r\n              millisecond: 'MMM DD',\r\n              second: 'MMM DD',\r\n              minute: 'MMM DD',\r\n              hour: 'MMM DD',\r\n              day: 'MMM DD',\r\n              week: 'MMM DD',\r\n              month: 'MMM DD',\r\n              quarter: 'MMM DD',\r\n              year: 'MMM DD',\r\n            },\r\n          },\r\n          gridLines: {\r\n            color: 'rgba(0, 0, 0, 0)',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content\">\r\n        <Line data={dataset} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllStatesChart;\r\n","import React from 'react';\r\nimport {Line, defaults} from 'react-chartjs-2';\r\nimport moment from 'moment';\r\n\r\nfunction TotalConfirmedChart(props) {\r\n  const dates = [];\r\n  const confirmed = [];\r\n  const recovered = [];\r\n  const deceased = [];\r\n\r\n  defaults.global.elements.line.fill = false;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'average';\r\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\r\n  defaults.global.tooltips.displayColors = false;\r\n  defaults.global.tooltips.borderColor = '#c62828';\r\n  defaults.global.tooltips.borderWidth = 1;\r\n  defaults.global.tooltips.titleFontColor = '#000';\r\n  defaults.global.tooltips.bodyFontColor = '#000';\r\n  defaults.global.tooltips.caretPadding = 4;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'nearest';\r\n  defaults.global.legend.display = true;\r\n  defaults.global.legend.position = 'bottom';\r\n\r\n  defaults.global.hover.intersect = false;\r\n\r\n  if (!props.timeseries || props.timeseries.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  props.timeseries.forEach((data, index) => {\r\n    if (index >= 31) {\r\n      dates.push(moment(data.date.trim(), 'DD MMM'));\r\n      confirmed.push(data.totalconfirmed);\r\n      recovered.push(data.totalrecovered);\r\n      deceased.push(data.totaldeceased);\r\n    }\r\n  });\r\n\r\n  const dataset = {\r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        borderWidth: 2,\r\n        data: confirmed,\r\n        borderCapStyle: 'round',\r\n        pointBackgroundColor: '#ff073a',\r\n        label: 'Confirmed',\r\n        borderColor: '#ff073a',\r\n        pointHoverRadius: 2,\r\n      },\r\n      {\r\n        borderWidth: 2,\r\n        data: recovered,\r\n        borderCapStyle: 'round',\r\n        pointBackgroundColor: '#28a745',\r\n        label: 'Recovered',\r\n        borderColor: '#28a745',\r\n        pointHoverRadius: 2,\r\n      },\r\n      {\r\n        borderWidth: 2,\r\n        data: deceased,\r\n        borderCapStyle: 'round',\r\n        pointBackgroundColor: '#6c757d',\r\n        label: 'Deceased',\r\n        borderColor: '#6c757d',\r\n        pointHoverRadius: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    events: [\r\n      'click',\r\n      'mousemove',\r\n      'mouseout',\r\n      'touchstart',\r\n      'touchmove',\r\n      'touchend',\r\n    ],\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: 'index',\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n      line: {\r\n        tension: 0.1,\r\n      },\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          ticks: {\r\n            beginAtZero: true,\r\n            max: undefined,\r\n            precision: 0,\r\n          },\r\n          scaleLabel: {\r\n            display: false,\r\n            labelString: 'Total Cases',\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          type: 'time',\r\n          time: {\r\n            unit: 'day',\r\n            tooltipFormat: 'MMM DD',\r\n            stepSize: 7,\r\n            displayFormats: {\r\n              millisecond: 'MMM DD',\r\n              second: 'MMM DD',\r\n              minute: 'MMM DD',\r\n              hour: 'MMM DD',\r\n              day: 'MMM DD',\r\n              week: 'MMM DD',\r\n              month: 'MMM DD',\r\n              quarter: 'MMM DD',\r\n              year: 'MMM DD',\r\n            },\r\n          },\r\n          gridLines: {\r\n            color: 'rgba(0, 0, 0, 0)',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  if (props.mode) {\r\n    options.scales.yAxes = [\r\n      {\r\n        type: 'logarithmic',\r\n        ticks: {\r\n          min: 0,\r\n          max: 10000,\r\n          callback: function (value, index, values) {\r\n            if (value === 10000) return '10000';\r\n            if (value === 2000) return '2500';\r\n            if (value === 500) return '500';\r\n            if (value === 100) return '100';\r\n            if (value === 20) return '25';\r\n            if (value === 5) return '5';\r\n            if (value === 0) return '0';\r\n            return null;\r\n          },\r\n        },\r\n        scaleLabel: {\r\n          display: false,\r\n          labelString: 'Total Cases',\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content\">\r\n        <Line data={dataset} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TotalConfirmedChart;\r\n","import React from 'react';\r\nimport {Bar, defaults} from 'react-chartjs-2';\r\nimport moment from 'moment';\r\n\r\nfunction DailyConfirmedChart(props) {\r\n  const dates = [];\r\n  const confirmed = [];\r\n  const recovered = [];\r\n  const deceased = [];\r\n\r\n  defaults.global.elements.line.fill = false;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'average';\r\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\r\n  defaults.global.tooltips.displayColors = false;\r\n  defaults.global.tooltips.borderColor = '#c62828';\r\n  defaults.global.tooltips.borderWidth = 1;\r\n  defaults.global.tooltips.titleFontColor = '#000';\r\n  defaults.global.tooltips.bodyFontColor = '#000';\r\n  defaults.global.tooltips.caretPadding = 4;\r\n  defaults.global.tooltips.intersect = false;\r\n  defaults.global.tooltips.mode = 'nearest';\r\n  defaults.global.tooltips.position = 'nearest';\r\n  defaults.global.legend.display = true;\r\n  defaults.global.legend.position = 'bottom';\r\n  defaults.global.hover.intersect = false;\r\n\r\n  if (!props.timeseries || props.timeseries.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  props.timeseries.forEach((data, index) => {\r\n    if (index >= 31) {\r\n      dates.push(moment(data.date.trim(), 'DD MMM').format('DD MMM'));\r\n      confirmed.push(\r\n        data.dailyconfirmed - data.dailyrecovered - data.dailydeceased\r\n      );\r\n      recovered.push(data.dailyrecovered);\r\n      deceased.push(data.dailydeceased);\r\n    }\r\n  });\r\n\r\n  const barDataSet = {\r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        data: recovered,\r\n        label: 'Recovered',\r\n        backgroundColor: '#28a745',\r\n      },\r\n      {\r\n        data: deceased,\r\n        label: 'Deceased',\r\n        backgroundColor: '#6c757d',\r\n      },\r\n      {\r\n        data: confirmed,\r\n        label: 'Active',\r\n        backgroundColor: '#ff073a',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    tooltips: {\r\n      mode: 'index',\r\n    },\r\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 20,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n          gridLines: {\r\n            color: 'rgba(0, 0, 0, 0)',\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-header\">\r\n      <div className=\"chart-title\">{props.title}</div>\r\n      <div className=\"chart-content\">\r\n        <Bar data={barDataSet} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DailyConfirmedChart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport GenderChart from './Charts/genderchart';\r\nimport AgeChart from './Charts/agechart';\r\nimport NationalityChart from './Charts/nationalitychart';\r\nimport AllStatesChart from './Charts/allstates';\r\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\r\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\r\n\r\nfunction DeepDive(props) {\r\n  const [fetched, setFetched] = useState(false);\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [rawData, setRawData] = useState([]);\r\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n        rawDataResponse,\r\n        stateDailyResponse,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/raw_data.json'),\r\n        axios.get('https://api.covid19india.org/states_daily.json'),\r\n      ]);\r\n      setTimeseries(response.data.cases_time_series);\r\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\r\n      setRawData(rawDataResponse.data.raw_data);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cards-container\">\r\n      <section className=\"cards\">\r\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\r\n          <TotalConfirmedChart\r\n            title=\"India - Total Cases\"\r\n            timeseries={timeseries}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\r\n          <DailyConfirmedChart\r\n            title=\"India - Daily Cases\"\r\n            timeseries={timeseries}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\r\n          <AllStatesChart\r\n            title=\"States - Total Cases\"\r\n            data={statesTimeSeries}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\r\n          <GenderChart title=\"Patient Gender\" data={rawData} />\r\n        </div>\r\n\r\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\r\n          <AgeChart title=\"Patient Age\" data={rawData} />\r\n        </div>\r\n\r\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\r\n          <NationalityChart title=\"Patient Nationality\" data={rawData} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeepDive;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {useTable} from 'react-table';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst usePanelSummaryStyles = makeStyles((theme) => ({\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  root: {\r\n    backgroundColor: '#201aa220',\r\n    height: '4rem',\r\n  },\r\n}));\r\nconst usePanelDetailsStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '0px 5px 0px 24px',\r\n  },\r\n}));\r\nconst useListStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst usePanelStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: '0.2rem',\r\n  },\r\n}));\r\nconst useItemTextStyles = makeStyles((theme) => ({\r\n  primary: {\r\n    fontFamily: 'Archia',\r\n    fontWeight: 500,\r\n    fontStyle: 'normal',\r\n    fontSize: '13px',\r\n    fontTransform: 'uppercase',\r\n  },\r\n  secondary: {\r\n    fontFamily: 'Archia',\r\n    fontWeight: 400,\r\n    fontStyle: 'normal',\r\n    fontSize: '12px',\r\n    width: '100%',\r\n    wordWrap: 'break-word',\r\n    // fontTransform: 'uppercase'\r\n  },\r\n}));\r\n\r\nconst getNumbersLink = (initialValue) => {\r\n  // const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n  const numbf = initialValue.split(',');\r\n  // console.log('numbers are', '' + numbf.length);\r\n\r\n  const numbg = /^\\d{5,12}$/g;\r\n  const numberList = numbf.map((iv, i) => {\r\n    iv = iv.trim();\r\n    // console.log('numbr ', '' + iv);\r\n    return iv.replace(numbg, '<a href=\"tel:$&\">$&</a>');\r\n  });\r\n  // console.log('numberList ', '' + numberList);\r\n  return {numberList};\r\n};\r\nconst getFormattedLinkForAccordion = (initialValue) => {\r\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\r\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\r\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\r\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\r\n  const noLetters = /^[\\d,\\s]+$/;\r\n  let s3 = '';\r\n  if (initialValue.match(noLetters) != null) {\r\n    const formatedLink = getNumbersLink(initialValue);\r\n    const links = JSON.parse(JSON.stringify(formatedLink));\r\n    // console.log('success val', ' --' + JSON.stringify(links.numberList));\r\n    s3 = String(links.numberList).replace(/,/g, '<br>');\r\n  } else {\r\n    const s1 = initialValue.replace(\r\n      reurl1,\r\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\r\n    );\r\n    const s2 = s1.replace(\r\n      reinsta,\r\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\r\n    );\r\n    s3 = s2.replace(\r\n      refb,\r\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"tablecelldata\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: s3,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst getFormattedLink = (initialValue) => {\r\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\r\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\r\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\r\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\r\n  const noLetters = /^[\\d,\\s]+$/;\r\n  let s3 = '';\r\n  if (initialValue.match(noLetters) != null) {\r\n    const formatedLink = getNumbersLink(initialValue);\r\n    const links = JSON.parse(JSON.stringify(formatedLink));\r\n    // console.log('success val', ' --' + JSON.stringify(links.numberList));\r\n    s3 = String(links.numberList).replace(/,/g, '<br>');\r\n  } else {\r\n    const s1 = initialValue.replace(\r\n      reurl1,\r\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\r\n    );\r\n    const s2 = s1.replace(\r\n      reinsta,\r\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\r\n    );\r\n    s3 = s2.replace(\r\n      refb,\r\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\r\n    );\r\n  }\r\n  return s3;\r\n};\r\nconst rendercell = (celli) => {\r\n  const value = celli.cell.value;\r\n  console.log(celli);\r\n  let renderedvalue = '';\r\n  const link = celli.row.allCells[5].value.split(',')[0];\r\n\r\n  if (celli.column.id === 'contact') renderedvalue = getFormattedLink(value);\r\n  else if (celli.column.id === 'phonenumber') {\r\n    // renderedvalue = String(JSON.parse(JSON.stringify(getNumbersLink(value))).numberList).replace(/,/g, '<br>');\r\n    renderedvalue = getFormattedLink(value);\r\n  } else if (celli.column.id === 'nameoftheorganisation') {\r\n    if (link !== '')\r\n      renderedvalue = `<a href=${link} target=\"_blank\">${value}</a>`;\r\n    else renderedvalue = value;\r\n  } else renderedvalue = value;\r\n\r\n  return (\r\n    <div\r\n      className=\"tablecelldata\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: renderedvalue,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nconst FormattedCell = ({value: initialValue, editable}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue);\r\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\r\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\r\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\r\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\r\n\r\n  // If the initialValue is changed externall, sync it up with our state\r\n  React.useEffect(() => {\r\n    const noLetters = /^[\\d,\\s]+$/;\r\n    if (initialValue.match(noLetters) != null) {\r\n      const formatedLink = getNumbersLink(initialValue);\r\n      const links = JSON.parse(JSON.stringify(formatedLink));\r\n      setValue(String(links.numberList).replace(/,/g, '<br>'));\r\n    } else {\r\n      const s1 = initialValue.replace(\r\n        reurl1,\r\n        '<a href=\"$1\" target=\"_blank\">Link</a>'\r\n      );\r\n      const s2 = s1.replace(\r\n        reinsta,\r\n        '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\r\n      );\r\n      const s3 = s2.replace(\r\n        refb,\r\n        '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\r\n      );\r\n      setValue(s3);\r\n    }\r\n  }, [initialValue, reurl1, refb, reinsta]);\r\n\r\n  return (\r\n    <div\r\n      className=\"tablecelldata\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: value,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\n// searchbar stuff\r\n\r\nconst getSuggestions = (value, resources) => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  // console.log(resources);\r\n  return inputLength === 0\r\n    ? resources\r\n    : resources.filter(\r\n        (resource) =>\r\n          resource.category.toLowerCase().includes(inputValue.toLowerCase()) ||\r\n          resource.descriptionandorserviceprovided\r\n            .toLowerCase()\r\n            .includes(inputValue.toLowerCase()) ||\r\n          resource.nameoftheorganisation\r\n            .toLowerCase()\r\n            .includes(inputValue.toLowerCase())\r\n      );\r\n};\r\n\r\nconst getSuggestionValue = (suggestion) => suggestion.nameoftheorganisation;\r\n\r\nconst renderSuggestion = (suggestion) => (\r\n  <div>{suggestion.nameoftheorganisation}</div>\r\n);\r\n\r\nfunction ResourceTable({\r\n  columns,\r\n  data,\r\n  isDesktop,\r\n  totalCount,\r\n  onScrollUpdate,\r\n  city,\r\n  category,\r\n  indianstate,\r\n}) {\r\n  const classesPannelSummary = usePanelSummaryStyles();\r\n  const classesPanel = usePanelStyles();\r\n  const classesListItemText = useItemTextStyles();\r\n  const classesPanelDetails = usePanelDetailsStyles();\r\n  const classesList = useListStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      Cell: FormattedCell,\r\n    }),\r\n    []\r\n  );\r\n  const handleExpansionChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState(data);\r\n\r\n  const prevIndianState = useRef('');\r\n  const prevCity = useRef('');\r\n  const prevCategory = useRef('');\r\n\r\n  useEffect(() => {\r\n    if (\r\n      prevCategory.current === category &&\r\n      prevIndianState.current === indianstate &&\r\n      prevCity.current === city\r\n    ) {\r\n      setSuggestions(getSuggestions(searchValue, data));\r\n    } else {\r\n      setSuggestions(data);\r\n      setSearchValue('');\r\n      prevCategory.current = category;\r\n      prevIndianState.current = indianstate;\r\n      prevCity.current = city;\r\n    }\r\n  }, [searchValue, data, category, indianstate, city]);\r\n\r\n  const onChange = (event, {newValue}) => {\r\n    setSearchValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({value}) => {\r\n    setSuggestions(getSuggestions(value, data));\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: '',\r\n    value: searchValue,\r\n    onChange: onChange,\r\n  };\r\n\r\n  const renderInputComponent = (inputProps) => (\r\n    <TextField\r\n      id=\"outlined-number\"\r\n      label=\"Search keyword\"\r\n      fullWidth={true}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      style={{\r\n        width: '100%',\r\n      }}\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <SearchOutlinedIcon style={{fontSize: '0.7rem'}} />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      {...inputProps}\r\n    />\r\n  );\r\n\r\n  const parseText = function (text, limit) {\r\n    if (text.length > limit) {\r\n      for (let i = limit; i > 0; i--) {\r\n        if (\r\n          text.charAt(i) === ' ' &&\r\n          (text.charAt(i - 1) !== ',' ||\r\n            text.charAt(i - 1) !== '.' ||\r\n            text.charAt(i - 1) !== ';')\r\n        ) {\r\n          return text.substring(0, i) + '...';\r\n        }\r\n      }\r\n      return text.substring(0, limit) + '...';\r\n    } else return text;\r\n  };\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n  } = useTable({\r\n    columns,\r\n    data: suggestions,\r\n    defaultColumn,\r\n    initialState: {hiddenColumns: 'contact'},\r\n  });\r\n\r\n  // Render the UI for your table\r\n  if (isDesktop === true)\r\n    return (\r\n      <>\r\n        <div className=\"searchbar\">\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            renderSuggestion={renderSuggestion}\r\n            inputProps={inputProps}\r\n            alwaysRenderSuggestions={true}\r\n            renderInputComponent={renderInputComponent}\r\n          />\r\n        </div>\r\n        <div className=\"tableandcontrols\">\r\n          <InfiniteScroll\r\n            dataLength={data.length}\r\n            hasMore={data.length < totalCount}\r\n            next={onScrollUpdate}\r\n            loader={<h4>Fetching more information, please wait.</h4>}\r\n          >\r\n            <table {...getTableProps()}>\r\n              <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                  <tr\r\n                    key={headerGroup.id}\r\n                    {...headerGroup.getHeaderGroupProps()}\r\n                  >\r\n                    {headerGroup.headers.map((column, i) => (\r\n                      <th\r\n                        key={column.id}\r\n                        {...column.getHeaderProps()}\r\n                        className={i === 3 ? 'descriptionCol sticky' : 'sticky'}\r\n                      >\r\n                        {column.render('Header')}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                {rows.map((row, i) => {\r\n                  prepareRow(row);\r\n                  return (\r\n                    <tr key={row.id} {...row.getRowProps()}>\r\n                      {row.cells.map((cell, cellindex) => {\r\n                        return (\r\n                          <td key={cellindex} {...cell.getCellProps()}>\r\n                            {cell.render(rendercell)}\r\n                          </td>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </InfiniteScroll>\r\n        </div>\r\n      </>\r\n    );\r\n  else\r\n    return (\r\n      <>\r\n        <div className=\"searchbar\">\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            renderSuggestion={renderSuggestion}\r\n            inputProps={inputProps}\r\n            alwaysRenderSuggestions={true}\r\n            renderInputComponent={renderInputComponent}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"resourcesaccordion\"\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: '100%',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <InfiniteScroll\r\n            dataLength={data.length}\r\n            hasMore={data.length < totalCount}\r\n            next={onScrollUpdate}\r\n            loader={<h4>Fetching more information, please wait.</h4>}\r\n            style={{width: '100%', maxWidth: '335px', overflow: 'hidden'}} // for large texts\r\n          >\r\n            {rows.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <ExpansionPanel\r\n                  key={row.id}\r\n                  classes={{root: classesPanel.root}}\r\n                  expanded={expanded === `panel-${i}`}\r\n                  onChange={handleExpansionChange(`panel-${i}`)}\r\n                >\r\n                  <ExpansionPanelSummary\r\n                    classes={{\r\n                      content: classesPannelSummary.content,\r\n                      root: classesPannelSummary.root,\r\n                    }}\r\n                  >\r\n                    {/* <div className=\"expanelheading\"\r\n                                 style={{display: 'flex',\r\n                                         flexDirection: 'row',\r\n                                         justifyContent: 'space-between',\r\n                                         backgroundColor: 'blue'}}> */}\r\n                    <div\r\n                      className=\"orgname\"\r\n                      style={{\r\n                        maxWidth: '10rem',\r\n                        textAlign: 'start',\r\n                        color: '#201aa2dd',\r\n                      }}\r\n                    >\r\n                      <h6>\r\n                        {parseText(row.values['nameoftheorganisation'], 50)}\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      className=\"orgcategory\"\r\n                      style={{maxWidth: '10.9rem', textAlign: 'end'}}\r\n                    >\r\n                      <h6>{row.values['category']}</h6>\r\n                    </div>\r\n                    {/* </div> */}\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails\r\n                    classes={{root: classesPanelDetails.root}}\r\n                  >\r\n                    <List\r\n                      disablePadding={true}\r\n                      dense={true}\r\n                      classes={{root: classesList.root}}\r\n                    >\r\n                      <ListItem\r\n                        alignItems=\"flex-start\"\r\n                        dense={true}\r\n                        divider={true}\r\n                      >\r\n                        <ListItemText\r\n                          primary=\"Organisation Name\"\r\n                          secondary={row.values['nameoftheorganisation']}\r\n                          classes={{\r\n                            primary: classesListItemText.primary,\r\n                            secondary: classesListItemText.secondary,\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem\r\n                        alignItems=\"flex-start\"\r\n                        dense={true}\r\n                        divider={true}\r\n                      >\r\n                        <ListItemText\r\n                          primary=\"Location\"\r\n                          secondary={row.values['city']}\r\n                          classes={{\r\n                            primary: classesListItemText.primary,\r\n                            secondary: classesListItemText.secondary,\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem\r\n                        alignItems=\"flex-start\"\r\n                        dense={true}\r\n                        divider={true}\r\n                      >\r\n                        <ListItemText\r\n                          primary=\"Description\"\r\n                          secondary={\r\n                            row.values['descriptionandorserviceprovided']\r\n                          }\r\n                          classes={{\r\n                            primary: classesListItemText.primary,\r\n                            secondary: classesListItemText.secondary,\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem\r\n                        alignItems=\"flex-start\"\r\n                        dense={true}\r\n                        divider={true}\r\n                      >\r\n                        <ListItemText\r\n                          primary=\"Service\"\r\n                          secondary={row.values['category']}\r\n                          classes={{\r\n                            primary: classesListItemText.primary,\r\n                            secondary: classesListItemText.secondary,\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem\r\n                        alignItems=\"flex-start\"\r\n                        dense={true}\r\n                        divider={true}\r\n                      >\r\n                        <ListItemText\r\n                          primary=\"Phonenumber\"\r\n                          secondary={getFormattedLinkForAccordion(\r\n                            row.values['phonenumber']\r\n                          )}\r\n                          classes={{\r\n                            primary: classesListItemText.primary,\r\n                            secondary: classesListItemText.secondary,\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                      <ListItem\r\n                        alignItems=\"flex-start\"\r\n                        dense={true}\r\n                        divider={true}\r\n                      >\r\n                        <ListItemText\r\n                          primary=\"Website\"\r\n                          secondary={getFormattedLinkForAccordion(\r\n                            row.values['contact']\r\n                          )}\r\n                          classes={{\r\n                            primary: classesListItemText.primary,\r\n                            secondary: classesListItemText.secondary,\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              );\r\n            })}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ResourceTable;\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport ResourceTable from './resourcetable';\r\nimport axios from 'axios';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Select from '@material-ui/core/Select';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport NavigationOutlinedIcon from '@material-ui/icons/NavigationOutlined';\r\n\r\nexport const useFormControlStyles = makeStyles((isDesktop) => {\r\n  if (isDesktop === true)\r\n    return {\r\n      root: {\r\n        margin: '1rem',\r\n        flexGrow: '1',\r\n      },\r\n    };\r\n  else\r\n    return {\r\n      root: {\r\n        margin: '0.4rem',\r\n        flexGrow: '1',\r\n        width: '100%',\r\n      },\r\n    };\r\n});\r\nexport const useInputLabelStyles = makeStyles(() => ({\r\n  root: {\r\n    fontFamily: 'archia',\r\n    fontSize: '11px !important',\r\n    fontWeight: 600,\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\n\r\nexport const useMenuItemStyles = makeStyles(() => ({\r\n  root: {\r\n    fontFamily: 'archia',\r\n    fontSize: '11px !important',\r\n    fontWeight: 600,\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\nexport const usePopOverStyles = makeStyles(() => ({\r\n  root: {\r\n    backgroundColor: '#201aa220',\r\n    zIndex: '1000',\r\n  },\r\n}));\r\nexport const useTextInputStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '0.5rem',\r\n  },\r\n}));\r\nfunction Resources(props) {\r\n  const [data, setData] = useState([]);\r\n  const [partData, setPartData] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [city, setCity] = useState('all');\r\n  const [category, setCategory] = useState('all');\r\n  const [indianstate, setIndianState] = useState('all');\r\n  const [resourcedict, setResourceDict] = useState({});\r\n  const [showTable, setShowTable] = useState(false);\r\n  const [isDesktop, setIsDesktop] = useState(false);\r\n  const classesFormControl = useFormControlStyles();\r\n  const classesInputLabel = useInputLabelStyles();\r\n  const classesMenuItem = useMenuItemStyles();\r\n  const classesPopOver = usePopOverStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getResources();\r\n    }\r\n  }, [fetched, data, resourcedict]);\r\n  const checkForResizeEvent = useCallback((event) => {\r\n    if (window.innerWidth > 639) setIsDesktop(true);\r\n    else setIsDesktop(false);\r\n    // console.log(isDesktop);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth > 639) setIsDesktop(true);\r\n    else setIsDesktop(false);\r\n    window.addEventListener('resize', checkForResizeEvent);\r\n    return () => {\r\n      window.removeEventListener('resize', checkForResizeEvent);\r\n    };\r\n  }, [isDesktop, checkForResizeEvent]);\r\n\r\n  const getResources = async () => {\r\n    try {\r\n      const [response] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/resources/resources.json'),\r\n      ]);\r\n      // console.log(response)\r\n      // console.log(\"Column names are\")\r\n      // console.log(columns)\r\n      // setData(response.data.resources);\r\n      const hashmap = {};\r\n      response.data.resources.forEach((x) => {\r\n        // console.log(x)\r\n        if (typeof hashmap[x['state']] === 'undefined')\r\n          hashmap[x['state']] = {};\r\n        if (typeof hashmap[x['state']][x['city']] === 'undefined')\r\n          hashmap[x['state']][x['city']] = {};\r\n        if (\r\n          typeof hashmap[x['state']][x['city']][x['category']] === 'undefined'\r\n        )\r\n          hashmap[x['state']][x['city']][x['category']] = [];\r\n        if (Array.isArray(hashmap[x['state']][x['city']][x['category']]))\r\n          hashmap[x['state']][x['city']][x['category']].push(x);\r\n      });\r\n\r\n      setResourceDict(hashmap);\r\n      // setIndianState(Object.keys()[0]);\r\n\r\n      setFetched(true);\r\n      // console.log(resourcedict);\r\n    } catch (err) {\r\n      // console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleDisclaimerClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleDisclaimerClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const isDisclaimerOpen = Boolean(anchorEl);\r\n  const id = isDisclaimerOpen ? 'simple-popover' : undefined;\r\n  function topFunction() {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n\r\n  const memocols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'City',\r\n        accessor: 'city',\r\n      },\r\n      {\r\n        Header: 'Category',\r\n        accessor: 'category',\r\n      },\r\n      {\r\n        Header: 'Organisation',\r\n        accessor: 'nameoftheorganisation',\r\n      },\r\n      {\r\n        Header: 'Description',\r\n        accessor: 'descriptionandorserviceprovided',\r\n      },\r\n      {\r\n        Header: 'Phone',\r\n        accessor: 'phonenumber',\r\n      },\r\n      {\r\n        Header: 'Source',\r\n        accessor: 'contact',\r\n        isVisible: false,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  // const memodata = React.useMemo(() => data, [data])\r\n\r\n  const getCityOptions = function () {\r\n    if (indianstate) {\r\n      if (indianstate === 'all') return [];\r\n      else {\r\n        return Object.keys(resourcedict[indianstate])\r\n          .sort()\r\n          .map((x) => (\r\n            <option\r\n              key={x.id}\r\n              value={x}\r\n              style={{\r\n                fontFamily: 'archia',\r\n                fontSize: '11px !important',\r\n                fontWeight: 600,\r\n                textTransform: 'uppercase',\r\n              }}\r\n            >\r\n              {x}\r\n            </option>\r\n          ));\r\n      }\r\n    } else return [];\r\n    // return getCityList().map((x) => <option value={x}>{x}</option>)\r\n  };\r\n  const getIndianStateOptions = function () {\r\n    // let defaultOption = ['Please select']\r\n    return Object.keys(resourcedict)\r\n      .sort()\r\n      .map((x) => (\r\n        <option\r\n          key={x.id}\r\n          value={x}\r\n          style={{\r\n            fontFamily: 'archia',\r\n            fontSize: '11px !important',\r\n            fontWeight: 600,\r\n            textTransform: 'uppercase',\r\n          }}\r\n        >\r\n          {x}\r\n        </option>\r\n      ));\r\n  };\r\n  const getCategoryOptions = function () {\r\n    if (indianstate && city) {\r\n      if (indianstate === 'all') {\r\n        const array = [];\r\n        Object.values(resourcedict).forEach((state) => {\r\n          Object.values(state).forEach((citydata) => {\r\n            Object.keys(citydata).forEach((x) => {\r\n              if (array.indexOf(x) === -1) array.push(x);\r\n            });\r\n          });\r\n        });\r\n        return array.map((x) => (\r\n          <option\r\n            key={x.id}\r\n            value={x}\r\n            style={{\r\n              fontFamily: 'archia',\r\n              fontSize: '11px !important',\r\n              fontWeight: 600,\r\n              textTransform: 'uppercase',\r\n            }}\r\n          >\r\n            {x}\r\n          </option>\r\n        ));\r\n      } else {\r\n        if (city === 'all') {\r\n          const array = [];\r\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\r\n            Object.keys(citydata).forEach((x) => {\r\n              if (array.indexOf(x) === -1) array.push(x);\r\n            });\r\n          });\r\n          return array.map((x) => (\r\n            <option\r\n              key={x.id}\r\n              value={x}\r\n              style={{\r\n                fontFamily: 'archia',\r\n                fontSize: '11px !important',\r\n                fontWeight: 600,\r\n                textTransform: 'uppercase',\r\n              }}\r\n            >\r\n              {x}\r\n            </option>\r\n          ));\r\n        } else {\r\n          return Object.keys(resourcedict[indianstate][city])\r\n            .sort()\r\n            .map((x) => (\r\n              <option\r\n                key={x.id}\r\n                value={x}\r\n                style={{\r\n                  fontFamily: 'archia',\r\n                  fontSize: '11px !important',\r\n                  fontWeight: 600,\r\n                  textTransform: 'uppercase',\r\n                }}\r\n              >\r\n                {x}\r\n              </option>\r\n            ));\r\n        }\r\n      }\r\n    } else return [];\r\n  };\r\n\r\n  const filterTable = function () {\r\n    // console.log('Search Button Pressed');\r\n    // console.log(`Filters are: ${indianstate} ---> ${city} ----> ${category}`);\r\n    let a = [];\r\n    if (category === 'all') {\r\n      // console.log(\"All category selected\");\r\n      if (city === 'all') {\r\n        if (indianstate === 'all') {\r\n          Object.values(resourcedict).forEach((state) => {\r\n            Object.values(state).forEach((citydata) => {\r\n              Object.values(citydata).forEach((category) => {\r\n                category.forEach((x) => a.push(x));\r\n              });\r\n            });\r\n          });\r\n        } else {\r\n          Object.values(resourcedict[indianstate]).forEach((citydata) => {\r\n            Object.values(citydata).forEach((category) => {\r\n              category.forEach((x) => a.push(x));\r\n            });\r\n          });\r\n        }\r\n      } else {\r\n        Object.values(resourcedict[indianstate][city]).forEach((x) => {\r\n          x.forEach((y) => a.push(y));\r\n        });\r\n      }\r\n    } else {\r\n      // console.log(`Category chosen ${category}`);\r\n      // a = resourcedict[indianstate][city][category];\r\n\r\n      if (indianstate === 'all' && city === 'all') {\r\n        Object.values(resourcedict).forEach((state) => {\r\n          Object.values(state).forEach((citydata) => {\r\n            Object.values(citydata).forEach((categorydata) => {\r\n              categorydata.forEach((x) => {\r\n                if (x.category === category) a.push(x);\r\n              });\r\n            });\r\n          });\r\n        });\r\n      } else if (indianstate !== 'all' && city === 'all') {\r\n        Object.values(resourcedict[indianstate]).forEach((citydata) => {\r\n          if (category in citydata) {\r\n            citydata[category].forEach((x) => {\r\n              a.push(x);\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        a = resourcedict[indianstate][city][category];\r\n      }\r\n    }\r\n    try {\r\n      if ('PAN India' in resourcedict) {\r\n        resourcedict['PAN India']['Multiple']['CoVID-19 Testing Lab'].forEach(\r\n          (element) => {\r\n            a.push(element);\r\n          }\r\n        );\r\n      }\r\n    } catch (err) {\r\n      // console.log('No PAN India row found');\r\n    }\r\n    setData(a);\r\n    setPartData(a.slice(0, 30));\r\n    // console.log(resourcedict[indianstate][city][category]);\r\n    // console.log(data);\r\n    setShowTable(true);\r\n  };\r\n\r\n  const changeIndianState = function (changedstateevent) {\r\n    setIndianState(changedstateevent.target.value);\r\n    // setCity(\r\n    //   Object.keys(resourcedict[changedstateevent.target.value]).sort()[0]\r\n    // );\r\n    if (changedstateevent.target.value === '') {\r\n      setCity('');\r\n      document.getElementById('cityselect1').selectedIndex = 0;\r\n      setCategory('');\r\n      document.getElementById('categoryselect').selectedIndex = 0;\r\n    } else {\r\n      setCity('all');\r\n      document.getElementById('cityselect1').selectedIndex = 1;\r\n      setCategory('all');\r\n      document.getElementById('categoryselect').selectedIndex = 1;\r\n    }\r\n  };\r\n  const changeCity = function (changedcityevent) {\r\n    setCity(changedcityevent.target.value);\r\n    setCategory('all');\r\n    document.getElementById('categoryselect').selectedIndex = 1;\r\n  };\r\n  const changeCategory = function (changedcategoryevent) {\r\n    setCategory(changedcategoryevent.target.value);\r\n    // console.log(changedcategoryevent.target.value);\r\n  };\r\n  const appendData = function () {\r\n    const tempArr = partData.concat(\r\n      data.slice(partData.length, partData.length + 30)\r\n    );\r\n    setPartData(tempArr);\r\n  };\r\n\r\n  const openSharingLink = function (message) {\r\n    const shareUri = `https://www.addtoany.com/share#url=${encodeURI(\r\n      'https://www.covid19india.org/essentials'\r\n    )}&title=${encodeURI(message)}`;\r\n\r\n    const h = 500;\r\n    const w = 500;\r\n    const left = window.screen.width / 2 - w / 2;\r\n    const top = window.screen.height / 2 - h / 2;\r\n    return window.open(\r\n      shareUri,\r\n\r\n      document.title,\r\n      'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' +\r\n        w +\r\n        ', height=' +\r\n        h +\r\n        ', top=' +\r\n        top +\r\n        ', left=' +\r\n        left\r\n    );\r\n  };\r\n\r\n  const openSharingTray = function () {\r\n    const message =\r\n      'Discover nearest coronavirus support and essential service providers such as testing lab centres, accommodation shelters and vegetable vendors at ';\r\n    if (navigator.share !== undefined) {\r\n      navigator\r\n        .share({\r\n          title: document.title,\r\n          text: message,\r\n          url: 'https://www.covid19india.org/essentials',\r\n        })\r\n        .then()\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      openSharingLink(message);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Resources\">\r\n      <div className=\"filtersection\">\r\n        <div className=\"filtertitle\">\r\n          <h3>Service Before Self</h3>\r\n        </div>\r\n        {!isDesktop && (\r\n          <React.Fragment>\r\n            <div\r\n              className=\"disclaimercontainer\"\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'row-reverse',\r\n                width: '100%',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <div\r\n                className=\"button is-purple mobile-disclaimer-button\"\r\n                style={{\r\n                  margin: '0.2rem',\r\n                  padding: '0.5rem',\r\n                  alignItems: 'center',\r\n                }}\r\n                onClick={handleDisclaimerClick}\r\n              >\r\n                Disclaimer\r\n                <ErrorOutlineOutlinedIcon\r\n                  htmlColor=\"#6c757d\"\r\n                  fontSize=\"0.1rem\"\r\n                />\r\n              </div>\r\n              <Popover\r\n                id={id}\r\n                open={isDisclaimerOpen}\r\n                classes={{root: classesPopOver.root}}\r\n                anchorEl={anchorEl}\r\n                onClose={handleDisclaimerClose}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n              >\r\n                <h6\r\n                  style={{\r\n                    paddingLeft: '0.5rem',\r\n                    color: '#343a40',\r\n                    margin: '0.3rem 0rem',\r\n                  }}\r\n                >\r\n                  <p>\r\n                    We are a community sourced listing platform and are not\r\n                    associated with any of the organisations listed below.\r\n                  </p>\r\n                  <p>\r\n                    Although we verify all our listings, we request you to\r\n                    follow all the guidelines and take necessary precautions.\r\n                  </p>\r\n                  <p>\r\n                    We encourage you to report any error or suspicious activity\r\n                    so we can take immediate action.\r\n                  </p>\r\n                </h6>\r\n              </Popover>\r\n              <a\r\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\r\n                className=\"button add-entry is-purple\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\r\n              >\r\n                <span>Add</span>\r\n              </a>\r\n              <a\r\n                href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\r\n                className=\"button add-entry is-purple\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{margin: '0.2rem 0.2rem', padding: '0.5rem 0.5rem'}}\r\n              >\r\n                <span>Feedback</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"resourcefilters\">\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className=\"resourcefilterMobile\"\r\n                classes={{root: classesFormControl.root}}\r\n              >\r\n                <InputLabel\r\n                  id=\"demo-simple-select-outlined-label\"\r\n                  classes={{root: classesInputLabel.root}}\r\n                >\r\n                  State/UT\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"stateselect\"\r\n                  value={indianstate}\r\n                  onChange={changeIndianState}\r\n                  defaultValue=\"all\"\r\n                  label=\"State/UT\"\r\n                  classes={{root: classesMenuItem.root}}\r\n                >\r\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\r\n                    All states\r\n                  </option>\r\n                  {getIndianStateOptions()}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className=\"resourcefilterMobile\"\r\n                classes={{root: classesFormControl.root}}\r\n              >\r\n                <InputLabel\r\n                  id=\"demo-simple-select-outlined-label\"\r\n                  classes={{root: classesInputLabel.root}}\r\n                >\r\n                  City\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"cityselect1\"\r\n                  value={city}\r\n                  onChange={changeCity}\r\n                  defaultValue=\"all\"\r\n                  label=\"City\"\r\n                  classes={{root: classesMenuItem.root}}\r\n                >\r\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\r\n                    All Cities\r\n                  </option>\r\n                  {getCityOptions()}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className=\"resourcefilterMobile\"\r\n                classes={{root: classesFormControl.root}}\r\n              >\r\n                <InputLabel\r\n                  id=\"demo-simple-select-outlined-label\"\r\n                  classes={{root: classesInputLabel.root}}\r\n                >\r\n                  Services\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"categoryselect\"\r\n                  value={category}\r\n                  onChange={changeCategory}\r\n                  defaultValue=\"all\"\r\n                  label=\"Services\"\r\n                  classes={{root: classesMenuItem.root}}\r\n                >\r\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\r\n                    All Categories\r\n                  </option>\r\n                  {getCategoryOptions()}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <div\r\n                className=\"search-share\"\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <button\r\n                  className=\"button is-purple\"\r\n                  disabled={!indianstate}\r\n                  onClick={filterTable}\r\n                  style={{\r\n                    margin: '0.2rem 0.2rem',\r\n                    padding: '0.5rem 0.5rem',\r\n                    width: '50%',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  Search\r\n                </button>\r\n                <button\r\n                  onClick={openSharingTray}\r\n                  className=\"button add-entry is-purple\"\r\n                  style={{\r\n                    margin: '0.2rem 0.2rem',\r\n                    padding: '0.5rem 0.5rem',\r\n                    width: '50%',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <span>Share</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        {isDesktop && (\r\n          <React.Fragment>\r\n            <div\r\n              className=\"disclaimercontainer\"\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'row-reverse',\r\n                width: '100%',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <div\r\n                className=\"button disclaimer-button\"\r\n                style={{\r\n                  margin: '0rem',\r\n                  padding: '0.3rem',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-around',\r\n                }}\r\n                onClick={handleDisclaimerClick}\r\n              >\r\n                Disclaimer\r\n                <ErrorOutlineOutlinedIcon\r\n                  htmlColor=\"#6c757d\"\r\n                  fontSize=\"small\"\r\n                />\r\n              </div>\r\n              <Popover\r\n                id={id}\r\n                open={isDisclaimerOpen}\r\n                classes={{root: classesPopOver.root}}\r\n                anchorEl={anchorEl}\r\n                onClose={handleDisclaimerClose}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n              >\r\n                <h6\r\n                  style={{\r\n                    paddingLeft: '0.5rem',\r\n                    color: '#343a40',\r\n                    margin: '0.3rem 0rem',\r\n                  }}\r\n                >\r\n                  <p>\r\n                    We are a community sourced listing platform and are not\r\n                    associated with any of the organisations listed below.\r\n                  </p>\r\n                  <p>\r\n                    Although we verify all our listings, we request you to\r\n                    follow all the guidelines and take necessary precautions.\r\n                  </p>\r\n                  <p>\r\n                    We encourage you to report any error or suspicious activity\r\n                    so we can take immediate action.\r\n                  </p>\r\n                </h6>\r\n              </Popover>\r\n            </div>\r\n            <div className=\"resourcefilters\">\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className=\"resourcefilterMobile\"\r\n                classes={{root: classesFormControl.root}}\r\n              >\r\n                <InputLabel\r\n                  id=\"demo-simple-select-outlined-label\"\r\n                  classes={{root: classesInputLabel.root}}\r\n                >\r\n                  State/UT\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"stateselect\"\r\n                  value={indianstate}\r\n                  onChange={changeIndianState}\r\n                  defaultValue=\"all\"\r\n                  label=\"State/UT\"\r\n                  classes={{root: classesMenuItem.root}}\r\n                >\r\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\r\n                    All states\r\n                  </option>\r\n                  {getIndianStateOptions()}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className=\"resourcefilterMobile\"\r\n                classes={{root: classesFormControl.root}}\r\n              >\r\n                <InputLabel\r\n                  id=\"demo-simple-select-outlined-label\"\r\n                  classes={{root: classesInputLabel.root}}\r\n                >\r\n                  City\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"cityselect1\"\r\n                  value={city}\r\n                  onChange={changeCity}\r\n                  defaultValue=\"all\"\r\n                  label=\"City\"\r\n                  classes={{root: classesMenuItem.root}}\r\n                >\r\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\r\n                    All cities\r\n                  </option>\r\n                  {getCityOptions()}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className=\"resourcefilterMobile\"\r\n                classes={{root: classesFormControl.root}}\r\n              >\r\n                <InputLabel\r\n                  id=\"demo-simple-select-outlined-label\"\r\n                  classes={{root: classesInputLabel.root}}\r\n                >\r\n                  Services\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"categoryselect\"\r\n                  value={category}\r\n                  onChange={changeCategory}\r\n                  defaultValue=\"all\"\r\n                  label=\"Services\"\r\n                  classes={{root: classesMenuItem.root}}\r\n                >\r\n                  <option value=\"all\" classes={{root: classesMenuItem.root}}>\r\n                    All categories\r\n                  </option>\r\n                  {getCategoryOptions()}\r\n                </Select>\r\n              </FormControl>\r\n              <button\r\n                className=\"button is-purple\"\r\n                disabled={!indianstate}\r\n                onClick={filterTable}\r\n                style={!indianstate ? {pointerEvents: 'none'} : null}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n            <div\r\n              className=\"misclinkscontainer\"\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                marginTop: '0.2rem',\r\n                marginBottom: '0.6rem',\r\n              }}\r\n            >\r\n              <a\r\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfquevp7_rdgdEoDgTdimWwTXO3B9TjFEAm3DbrMDXxCiuwuA/viewform\"\r\n                className=\"button add-entry is-purple\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\r\n              >\r\n                <span>Add Entry</span>\r\n              </a>\r\n              <a\r\n                href=\"https://forms.gle/AG5hmYxyhto3NjU46\"\r\n                className=\"button add-entry is-purple\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{margin: '0rem 0.2rem', padding: '0.1rem 0.5rem'}}\r\n              >\r\n                <span>Feedback</span>\r\n              </a>\r\n              <button\r\n                onClick={openSharingTray}\r\n                className=\"button add-entry is-purple\"\r\n                style={{margin: '0rem 0.2rem', padding: '0.4rem'}}\r\n              >\r\n                <span>Share</span>\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n      {showTable && (\r\n        <React.Fragment>\r\n          <ResourceTable\r\n            columns={memocols}\r\n            data={partData}\r\n            totalCount={data.length}\r\n            isDesktop={isDesktop}\r\n            onScrollUpdate={appendData}\r\n            city={city}\r\n            category={category}\r\n            indianstate={indianstate}\r\n          />\r\n          <div>\r\n            <Fab\r\n              color=\"inherit\"\r\n              aria-label=\"gototop\"\r\n              id=\"gototopbtn\"\r\n              onClick={topFunction}\r\n              size=\"small\"\r\n              style={{\r\n                position: 'fixed',\r\n                bottom: '1rem',\r\n                right: '1rem',\r\n                zIndex: '1000',\r\n              }}\r\n            >\r\n              <NavigationOutlinedIcon htmlColor=\"#201aa299\" />\r\n            </Fab>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resources;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport './App.scss';\r\n\r\nimport Home from './components/home';\r\nimport Navbar from './components/navbar';\r\nimport Links from './components/links';\r\nimport FAQ from './components/faq';\r\nimport Banner from './components/banner';\r\nimport PatientDB from './components/patientdb';\r\nimport DeepDive from './components/deepdive';\r\nimport Resources from './components/resources';\r\n/* import PatientDB from './components/patientdb';*/\r\n\r\nconst history = require('history').createBrowserHistory;\r\n\r\nfunction App() {\r\n  const pages = [\r\n    {\r\n      pageLink: '/',\r\n      view: Home,\r\n      displayName: 'Home',\r\n      animationDelayForNavbar: 0.2,\r\n    },\r\n    {\r\n      pageLink: '/demographics',\r\n      view: PatientDB,\r\n      displayName: 'Demographics',\r\n      animationDelayForNavbar: 0.3,\r\n    },\r\n    {\r\n      pageLink: '/deepdive',\r\n      view: DeepDive,\r\n      displayName: 'Deep Dive',\r\n      animationDelayForNavbar: 0.4,\r\n    },\r\n    {\r\n      pageLink: '/links',\r\n      view: Links,\r\n      displayName: 'Helpful Links',\r\n      animationDelayForNavbar: 0.4,\r\n    },\r\n    {\r\n      pageLink: '/faq',\r\n      view: FAQ,\r\n      displayName: 'About',\r\n      animationDelayForNavbar: 0.5,\r\n    },\r\n    {\r\n      pageLink: '/essentials',\r\n      view: Resources,\r\n      displayName: 'Essentials',\r\n      animationDelayForNavbar: 0.7,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <Route\r\n          render={({location}) => (\r\n            <div className=\"Almighty-Router\">\r\n              <Navbar pages={pages} />\r\n              <Banner />\r\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\r\n              <Switch location={location}>\r\n                {pages.map((page, i) => {\r\n                  return (\r\n                    <Route\r\n                      exact\r\n                      path={page.pageLink}\r\n                      component={page.view}\r\n                      key={i}\r\n                    />\r\n                  );\r\n                })}\r\n                <Redirect to=\"/\" />\r\n              </Switch>\r\n            </div>\r\n          )}\r\n        />\r\n      </Router>\r\n\r\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\r\n        {/* <img\r\n          src=\"/icon.png\"\r\n          alt=\"https://www.covid19india.org | Coronavirus cases live dashboard\"\r\n        />*/}\r\n\r\n        <h5>We stand with everyone fighting on the frontlines</h5>\r\n        <div className=\"link\">\r\n          <a\r\n            href=\"https://github.com/covid19india\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            covid19india\r\n          </a>\r\n        </div>\r\n        <a\r\n          href=\"https://github.com/covid19india/covid19india-react\"\r\n          className=\"button github\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon.GitHub />\r\n          <span>Open Sourced on GitHub</span>\r\n        </a>\r\n        <a\r\n          className=\"button excel\"\r\n          href=\"https://bit.ly/patientdb\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon.Database />\r\n          <span>Crowdsourced Patient Database&nbsp;</span>\r\n        </a>\r\n        <a\r\n          href=\"https://twitter.com/covid19indiaorg\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"button twitter\"\r\n          style={{justifyContent: 'center'}}\r\n        >\r\n          <Icon.Twitter />\r\n          <span>View updates on Twitter</span>\r\n        </a>\r\n        <a\r\n          href=\"https://bit.ly/covid19crowd\"\r\n          className=\"button telegram\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Icon.MessageCircle />\r\n          <span>Join Telegram to Collaborate!</span>\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}